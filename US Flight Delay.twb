<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.Layers.true...Layers />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Airline_Delay_Cause (Airline Delay Cause)' inline='true' name='federated.0xuifmr1m0ieuz1gikv9w0ycqv20' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Airline Delay Cause' name='excel-direct.09r08v808cors014jm6zz0wu3n9b'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Alissa SR - LINKEDIN &amp; CV/PORTOFOLIO/Airline Delay Cause.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.09r08v808cors014jm6zz0wu3n9b' name='Airline_Delay_Cause' table='[Airline_Delay_Cause$]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='string' name='carrier' ordinal='3' />
            <column datatype='string' name='carrier_name' ordinal='4' />
            <column datatype='string' name='airport' ordinal='5' />
            <column datatype='string' name='city' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='airport_name' ordinal='8' />
            <column datatype='integer' name='arr_delay' ordinal='9' />
            <column datatype='integer' name='carrier_delay' ordinal='10' />
            <column datatype='integer' name='weather_delay' ordinal='11' />
            <column datatype='integer' name='nas_delay' ordinal='12' />
            <column datatype='integer' name='security_delay' ordinal='13' />
            <column datatype='integer' name='late_aircraft_delay' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.09r08v808cors014jm6zz0wu3n9b' name='Airline_Delay_Cause' table='[Airline_Delay_Cause$]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='string' name='carrier' ordinal='3' />
            <column datatype='string' name='carrier_name' ordinal='4' />
            <column datatype='string' name='airport' ordinal='5' />
            <column datatype='string' name='city' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='airport_name' ordinal='8' />
            <column datatype='integer' name='arr_delay' ordinal='9' />
            <column datatype='integer' name='carrier_delay' ordinal='10' />
            <column datatype='integer' name='weather_delay' ordinal='11' />
            <column datatype='integer' name='nas_delay' ordinal='12' />
            <column datatype='integer' name='security_delay' ordinal='13' />
            <column datatype='integer' name='late_aircraft_delay' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O10001:no:A1:O10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier_name]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>carrier_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airport]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airport_name]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>airport_name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arr_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>arr_delay</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[carrier_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>carrier_delay</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weather_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>weather_delay</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[nas_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>nas_delay</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[security_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>security_delay</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[late_aircraft_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>late_aircraft_delay</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Carrier Delay Percentage' datatype='real' name='[Calculation_854839550194896896]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Airline_Delay_Cause' datatype='table' name='[__tableau_internal_object_id__].[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]' role='measure' type='quantitative' />
      <column caption='Airport' datatype='string' name='[airport]' role='dimension' type='nominal' />
      <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
      <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
      <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Late Aircraft Delay' datatype='integer' name='[late_aircraft_delay]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Nas Delay' datatype='integer' name='[nas_delay]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='integer' name='[security_delay]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Weather Delay' datatype='integer' name='[weather_delay]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <group caption='Action (Carrier)' hidden='true' name='[Action (Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[carrier]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/PKBMSU~1/AppData/Local/Temp/TableauTemp/#TableauTemp_06ji1sg17wkjov1c2i03r0p5v9t9.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/01/2024 05:33:32 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>1</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>67</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier</remote-alias>
              <ordinal>3</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier_name</remote-alias>
              <ordinal>4</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport</remote-alias>
              <ordinal>5</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1089</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>6</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1042</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>7</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>61</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airport_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport_name</remote-alias>
              <ordinal>8</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1079</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arr_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[arr_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arr_delay</remote-alias>
              <ordinal>9</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11363</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[carrier_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier_delay</remote-alias>
              <ordinal>10</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6068</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weather_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weather_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weather_delay</remote-alias>
              <ordinal>11</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2506</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nas_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[nas_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nas_delay</remote-alias>
              <ordinal>12</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3574</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>security_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[security_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>security_delay</remote-alias>
              <ordinal>13</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>461</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>late_aircraft_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[late_aircraft_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>late_aircraft_delay</remote-alias>
              <ordinal>14</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5917</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:carrier:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;HA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;YX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;F9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;QX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;YV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;G4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B6&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Devils Lake&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saipan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scranton/Wilkes-Barre&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Syracuse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wenatchee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charlotte Amalie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmira/Corning&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gillette&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mammoth Lakes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Platte&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pierre&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Riverton/Lander&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. George&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Valparaiso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bristol/Johnson City/Kingsport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Del Rio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Evansville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hilton Head&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Latrobe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Martha&apos;s Vineyard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mosinee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ponce&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sarasota/Bradenton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Staunton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dothan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;International Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Punta Gorda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sioux City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Allentown/Bethlehem/Easton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cody&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Flagstaff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hyannis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ketchikan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Bern/Morehead/Beaufort&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paducah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Salina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Palm Beach/Palm Beach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christiansted&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hobbs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lawton/Fort Sill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mason City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sault Ste. Marie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bloomington/Normal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charleston/Dunbar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hattiesburg/Laurel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lynchburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rhinelander&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Augustine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Johnstown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Champaign/Urbana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cordova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Wayne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harrisburg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kotzebue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baton Rouge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fairbanks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kalispell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lewisburg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myrtle Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Casper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Leonard Wood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iron Mountain/Kingsfd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pasco/Kennewick/Richland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Traverse City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wichita Falls&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arcata/Eureka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Binghamton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cedar City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Duluth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Myers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hancock/Houghton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Islip&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kodiak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Minot&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Newburgh/Poughkeepsie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pellston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh/Durham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Williston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aspen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bismarck/Mandan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jackson/Vicksburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moab&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Petersburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dallas/Fort Worth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hayden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jacksonville/Camp Lejeune&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moline&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Bend/Coos Bay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Cloud&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Valdosta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bemidji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cold Bay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flint&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho Falls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Key West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pago Pago&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West Yellowstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beaumont/Port Arthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksburg/Fairmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greensboro/High Point&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prescott&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saginaw/Bay City/Midland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scottsbluff&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sun Valley/Hailey/Ketchum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adak Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brainerd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Escanaba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hibbing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manhattan/Ft. Riley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ogden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Plattsburgh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Petersburg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cedar Rapids/Iowa City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Smith&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harlingen/San Benito&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ithaca/Cortland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kona&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mission/McAllen/Edinburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newport News/Williamsburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bend/Redmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station/Bryan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dodge City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Dodge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gulfport/Biloxi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Killeen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Midland/Odessa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palm Springs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pullman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shreveport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;White Plains&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aguadilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Branson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Junction&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hilo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montrose/Delta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ogdensburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rock Springs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;State College&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='carrier' />
        <field-sort-custom-order field='carrier_name' />
        <field-sort-custom-order field='airport' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='airport_name' />
        <field-sort-custom-order field='arr_delay' />
        <field-sort-custom-order field='carrier_delay' />
        <field-sort-custom-order field='Calculation_854839550194896896' />
        <field-sort-custom-order field='weather_delay' />
        <field-sort-custom-order field='nas_delay' />
        <field-sort-custom-order field='security_delay' />
        <field-sort-custom-order field='late_aircraft_delay' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Airline_Delay_Cause' id='Airline!Delay!Cause_5FB1A11F0579484DA06E3E88416618AA'>
            <properties context=''>
              <relation connection='excel-direct.09r08v808cors014jm6zz0wu3n9b' name='Airline_Delay_Cause' table='[Airline_Delay_Cause$]' type='table'>
                <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='integer' name='month' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='carrier' ordinal='3' />
                  <column datatype='string' name='carrier_name' ordinal='4' />
                  <column datatype='string' name='airport' ordinal='5' />
                  <column datatype='string' name='city' ordinal='6' />
                  <column datatype='string' name='state' ordinal='7' />
                  <column datatype='string' name='airport_name' ordinal='8' />
                  <column datatype='integer' name='arr_delay' ordinal='9' />
                  <column datatype='integer' name='carrier_delay' ordinal='10' />
                  <column datatype='integer' name='weather_delay' ordinal='11' />
                  <column datatype='integer' name='nas_delay' ordinal='12' />
                  <column datatype='integer' name='security_delay' ordinal='13' />
                  <column datatype='integer' name='late_aircraft_delay' ordinal='14' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0xuifmr1m0ieuz1gikv9w0ycqv20'>
      <datasources>
        <datasource caption='Airline_Delay_Cause (Airline Delay Cause)' name='federated.0xuifmr1m0ieuz1gikv9w0ycqv20' />
      </datasources>
      <datasource-dependencies datasource='federated.0xuifmr1m0ieuz1gikv9w0ycqv20'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[tmn:date:qk]' included-values='in-range'>
        <min>#2017-01-01 00:00:00#</min>
        <max>#2022-07-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_45A0D99349534D6E8B1A711FD2A1DF16]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Carrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_E41831EC5BD549EF9A26B0A1C28B42CA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Carrier Delay Percentage' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_3D27530E35B64DD2A083C83BDA1022DF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Total Delay' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_B8B7125A041B450D8AADCB6BEE73EA3C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Carrier'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (Airline Delay Cause)' name='federated.0xuifmr1m0ieuz1gikv9w0ycqv20' />
          </datasources>
          <datasource-dependencies datasource='federated.0xuifmr1m0ieuz1gikv9w0ycqv20'>
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier_name]' derivation='Attribute' name='[attr:carrier_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:carrier:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:arr_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:carrier:nk]' />
              <tooltip column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[attr:carrier_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:arr_delay:qk]</rows>
        <cols>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:carrier:nk]</cols>
      </table>
      <simple-id uuid='{CEC21497-2C86-4663-897C-65EC0BAF778D}' />
    </worksheet>
    <worksheet name='Carrier Delay Percentage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (Airline Delay Cause)' name='federated.0xuifmr1m0ieuz1gikv9w0ycqv20' />
          </datasources>
          <datasource-dependencies datasource='federated.0xuifmr1m0ieuz1gikv9w0ycqv20'>
            <column caption='Carrier Delay Percentage' datatype='real' name='[Calculation_854839550194896896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
            </column>
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_854839550194896896]' derivation='Avg' name='[avg:Calculation_854839550194896896:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action1_45A0D99349534D6E8B1A711FD2A1DF16]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Action (Carrier)]</column>
            <column>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[avg:Calculation_854839550194896896:qk]' field-type='quantitative' max='0.7195615835188176' min='-0.15736087274833033' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[tmn:date:qk]' field-type='quantitative' max='#2025-05-11 20:19:57.943#' min='#2015-06-11 02:51:26.707#' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[avg:Calculation_854839550194896896:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[avg:Calculation_854839550194896896:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[avg:Calculation_854839550194896896:qk]</rows>
        <cols>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{03E0D5DD-279E-4EDA-97D5-E35BA4FD59F2}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (Airline Delay Cause)' name='federated.0xuifmr1m0ieuz1gikv9w0ycqv20' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xuifmr1m0ieuz1gikv9w0ycqv20'>
            <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport_name]' derivation='Attribute' name='[attr:airport_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action1_45A0D99349534D6E8B1A711FD2A1DF16]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Longitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:arr_delay:qk]' included-values='in-range'>
            <min>267800</min>
            <max>4255979000</max>
          </filter>
          <slices>
            <column>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:arr_delay:qk]</column>
            <column>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Latitude (generated)]</column>
            <column>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Longitude (generated)]</column>
            <column>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Action (Carrier)]</column>
            <column>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Longitude (generated)]' field-type='quantitative' max='-7344555.1648953566' min='-14206258.922920762' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Latitude (generated)]' field-type='quantitative' max='7679497.889296378' min='2531034.8403327055' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:city:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:city:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:city:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:state:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='State' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:state:nk]' />
              <color column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:arr_delay:qk]' />
              <geometry column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='157' />
              </style-rule>
            </style>
          </pane>
          <_.fcp.Layers.true...pane generated-title='City' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:city:nk]' />
              <size column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:arr_delay:qk]' />
              <lod column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:city:nk]' />
              <tooltip column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[attr:airport_name:nk]' />
              <lod column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.2105045318603516' />
                <format attr='mark-transparency' value='198' />
              </style-rule>
            </style>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Latitude (generated)]</rows>
        <cols>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{14B19B69-8606-40F2-A5CC-AFED2D0E08C5}' />
    </worksheet>
    <worksheet name='Total Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (Airline Delay Cause)' name='federated.0xuifmr1m0ieuz1gikv9w0ycqv20' />
          </datasources>
          <datasource-dependencies datasource='federated.0xuifmr1m0ieuz1gikv9w0ycqv20'>
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Late Aircraft Delay' datatype='integer' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Nas Delay' datatype='integer' name='[nas_delay]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='integer' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[carrier_delay]' derivation='Sum' name='[sum:carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='integer' name='[weather_delay]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:arr_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:carrier_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:late_aircraft_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:nas_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:security_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:weather_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action1_45A0D99349534D6E8B1A711FD2A1DF16]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[:Measure Names]</column>
            <column>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Action (Carrier)]</column>
            <column>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' value='14' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{AE7BD78D-2F5F-4A2B-8C09-EC4909051E5F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='US Flight Delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#faf5f0' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Airline_Delay_Cause (Airline Delay Cause)' name='federated.0xuifmr1m0ieuz1gikv9w0ycqv20' />
      </datasources>
      <datasource-dependencies datasource='federated.0xuifmr1m0ieuz1gikv9w0ycqv20'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97890' id='23' param='vert' type-v2='layout-flow' w='99002' x='499' y='1055'>
            <zone h='7651' id='24' type-v2='title' w='99002' x='499' y='1055'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90239' id='21' type-v2='layout-basic' w='99002' x='499' y='8706'>
              <zone h='85617' id='18' param='horz' type-v2='layout-flow' w='99002' x='499' y='13328'>
                <zone h='85617' id='16' type-v2='layout-basic' w='99002' x='499' y='13328'>
                  <zone h='75579' id='7' param='horz' type-v2='layout-flow' w='99002' x='499' y='23366'>
                    <zone h='75579' id='5' type-v2='layout-basic' w='99002' x='499' y='23366'>
                      <zone h='75579' id='3' name='Map' w='46383' x='499' y='23366'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='41770' id='12' name='Carrier' w='52619' x='46882' y='23366'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='33809' id='14' name='Carrier Delay Percentage' w='52619' x='46882' y='65136'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='10038' id='15' name='Total Delay' show-title='false' w='99002' x='499' y='13328'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='4622' id='20' type-v2='layout-flow' w='99002' x='499' y='8706'>
                <zone h='4622' id='19' name='Carrier Delay Percentage' param='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[tmn:date:qk]' show-title='false' type-v2='filter' values='database' w='99002' x='499' y='8706'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97890' id='27' param='vert' type-v2='layout-flow' w='99002' x='499' y='1055'>
                <zone h='7651' id='24' type-v2='title' w='99002' x='499' y='1055'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='72' h='10038' id='15' is-fixed='true' name='Total Delay' show-title='false' w='99002' x='499' y='13328'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='75579' id='3' is-fixed='true' name='Map' w='46383' x='499' y='23366'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41770' id='12' is-fixed='true' name='Carrier' w='52619' x='46882' y='23366'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4622' id='19' name='Carrier Delay Percentage' param='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[tmn:date:qk]' show-title='false' type-v2='filter' values='database' w='99002' x='499' y='8706'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='33809' id='14' is-fixed='true' name='Carrier Delay Percentage' w='52619' x='46882' y='65136'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8E54C6BF-0AF3-4CBB-85ED-E70D300B4C3C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:arr_delay:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:arr_delay:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:arr_delay:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:airport_name:nk]</field>
            <field>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:city:nk]</field>
            <field>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{BE17E098-CF05-4A92-A8E1-E55AFA196B35}' />
    </window>
    <window class='worksheet' name='Carrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:carrier:nk]</field>
            <field>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:carrier_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CB044AF-DFB3-45D4-ACF7-D17DEBFC559E}' />
    </window>
    <window class='worksheet' name='Carrier Delay Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[none:year:qk]</field>
            <field>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{57A31DE0-FC6B-43BA-A8D0-25DBD2FB4657}' />
    </window>
    <window class='worksheet' name='Total Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{898DD100-10B8-40A3-9318-8F75E301F9CB}' />
    </window>
    <window class='dashboard' maximized='true' name='US Flight Delay'>
      <viewpoints>
        <viewpoint name='Carrier'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Carrier Delay Percentage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.0xuifmr1m0ieuz1gikv9w0ycqv20].[sum:arr_delay:qk]' type='size'>
            <bucket-selection />
          </highlight>
          <map-scale-visibility value='0' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Total Delay'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='24' />
      <simple-id uuid='{AD30DF96-D8EF-4D65-8D1D-971596DEC0E7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carrier' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Carrier Delay Percentage' width='192'>
      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
      QIuQc2YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9V5McSZ7g93MPmaIqS6GgNVqh9cz0iJ3dvVvu3fF278xotndmpPGJX4Kf
      hS80vvGFZjQ78vZm5d1x93Z3tGqJBhqioVGFQlWlDuXOh0yP8oyMyMoqoDEzDfy7YVUVwt0j
      4q+Vi93dXe15Hs8KfvXZpyQSXj12kna7za8/+4RXzp7n8bCH5/t0Hz9Ba80bl17h4eNN6kfX
      cMfzP7z5Ja+cOkOtVkNrDYDjOGitUUqhtUYIkZ+zYdZxYOKcPbYQgjRNJ8YoG6c4pvlnrrfX
      JoRASglAlmVT95k1FOcx54rrLXuGg4KZO03T/LnNGqSUuK6bv4eyucx15ri91llz1mo1AJRS
      RFGE1posy3Acp/Qe13Xzaw77nPbazXdQSpXP53levshnAS6Ch50d/DPn6Q+HpFKQZhmDx9us
      nT5FuLzC7d0n/OxXv+Thxga1pUXe/M4HuL7HwtmT/PKLa7hRyhuvvEprcTF/6WWINi9IKXMC
      shFPKUW9XidJEoAJpJ41ln2tuT5N0/xvc409dxGqkNo8X/HY04JBYHvtZlytNa7rUqvViKKI
      OI5LibGMicwiBPt7DYfDfdcohCAMQwaDwcEfsLAue/7FxUW01vT7/QkiB5DFAZ4W3n3rLbZu
      3kYpxVZ7l3u37zAcDtlOhtwddrm78RBPCHZ7XbQjuXTqEjd/9hG9TgeAE69cZP2t1/j4zi1u
      372TI5TruvkHtF9+8VjxZSilJhDQvs6cq9VquK5bOY6BIlLY6xBC4DhOztnMOSll6b8yxClD
      tOK883DeKjBrNs9tzxdFEUqpuRC6yEhmQRzH9Pv90nPF5/J9nzRNybIMKSVBEBzwCUcQBMGE
      5rC7u0un05lCfvgKCMD3ff6nP/v3LCwssBDWcJTmjddfp7uxxfbGJu12h++99S6rp0/yyntv
      c/PjT5Gug8pGSBoPI1SWcfzSeb588pif/uLnlRyhyK0NQdgcuOpDmZefJAm+70+N4bouQRDk
      xGGL0iIClY1tf9wypC9KillQxm2Lc9hzVZ0rrtf3fZrNZk60QgiiKJprTfNClmWVBFPk1lEU
      5ZIiCIKcKRXvqfqmRptxXZcsyypVShtEv9/Xz1IFsifcevKE9u4uDzY3+OTaVTbvP+DdP/w+
      TpxwvLXCre3H3PzwY85/4x2CWo37N26hlebN734LMUYalWVEtx9w+bXXUUrlL9RGqKJOb18H
      5bq3IR4pJWEY5qLXnDNqkdFXi+OZew0Sp2ma66/5yx3PWaZW2eu0wYxpq2z2MxTXUBzXVhnt
      ucxzGRsARvr2wsJCTtCe57Gzs1P6Lauk0jwSyX7nQoiZNkBxzUWwpXmR0A+qGsNXIAFs+Kcf
      /pAgDOl3e7z3+hs0a3UQsHTuNA87O7x/4RVev3yZ3k6bH//gr1k/dRIv9BmOOb7Wmt2tJyy3
      liYMN2AKQcz1VZymTOybcQaDQX4+jmOiKCJNU9I0zfX74jxlXLZKhan6KFXHa7UaYRhOXVum
      gxehKJnsdRbXm6YpnU6HLMtwXTeXtJ7nlRLRPBKoDIy0O4gxX3XNLDXyMLbSVyYBbOj3+/w/
      P/hPDKOIS9/5Jl7g09newd1qsy0y+u0Og16P17/9LeLhgNufXeWN73wLIQR3P/2cP3jvm0gp
      ybJsSqfPH6TA5Yuw38txXTeXAvt5IMqQqihybVWkSBjmeJV9Yts1z8IAttdtSwADvu/jOA5R
      FCGlxPf9XBqa+zzPw3VdhBBPZaTCiEiNjv6bhq9UAhiIoogP3v8GQS3k/ufXAHjy8BFfPrxP
      0utzpLHA2vo6SmXUmk2ePNpgZ/PxiPuqjDRNc0TZj+uUSYEy49VGvCwbzdHtdifsgTKwvT8G
      ucskiz1PmeFYNORtD1KVhPmqIEkShsMhUkocx5lwdxpwHCe/7mnhWRP208C0lfEVwMbmJv/h
      z/8j58+cxfcD4igiGgzpd3u8cvY87X6fTZ1x7W//K2996xvUGg0aY9dVfWmJra0tjh07NuVT
      N2D0cfO7fXxrawulFM1mExiJ/Z2dHVZWVnAcB6UU3W6Xer1Os9kkTVM8z8ttgCKUqVz2mooG
      eNlaiwhu7qvX6znyGXtid3e31HtRBcX4RHH+Wc9kvC9FCWuI4rC++SIopabspXnugYOpXvPA
      c5EAJ0+coNVq0R70uf75VR5+eZtL773Nicuvst1pM9QZT7pdhHS4e+06npDc+ORT0JqV9SNs
      bm1NeGJsjmlzTcNty7wr/X6fMAxJ05RGo5GrU3EcEwRB/oKTJJlQEap0zaKubZDa6KeO4+C6
      bq42FI1w+3elVC6B+v0+/X6fdrtNv9/H87yn/uAH4bjG9ilClTfH932CICAIggOt8yBGNEC3
      20VrTbfbnTgupSSOY+I4zr/BYDCY3z55HjaA1prHW1t88tln/PyXv6BWr+MvNLj07ttc+ekv
      OLt+lN3eKFJMluGvr7B8dB3X83h44xbvnLlAo16fQJwyfb8MIeM4JkkS6vU6rusSRdEEkhuP
      hEFaYCIqWvSqzPJO2ERahvDmOpsgDOHNQtD9jL0yz0/VOGU2gD2OUqoyeFe81nVdFhcXcRyH
      NE0ZDAZzqUhRFFGr1QiCAN/36Xa7M6WLEII7d+7QbDaJ4xiTuZBlWR476Pf7LC8vE8cxg8GA
      hYUFBoNBLtkrn2Pf1T4DEEJwZG2Nty6/werxY6ysrDDc3kU6kjAI+M4H3+b0yZMMhgPOnjzF
      5u27tLeekCYJ/jBheWmp0u1XBPsapdQoHrGwkJ/3PI96vY7neXieRxiGeJ43gRR2VNes35Y2
      VYEsM7/5adyc5l/R4K3yWpWNWTSoDwtSSmq12sTzmvHt97af18dmCEopOp3OBPLPei4zX5Ik
      9Hq9SuS3x1hYWGA4HBIEQW6ELy4u5t/ESCCtde62TpJkf+fHzLPPGJaXljl5ZJ0HDx9y4eJF
      Nq/fYun4UdqdDh+8/w0ePd5keWWFxcdL7DzeYrC9y/fffX/C9w/TeR1F/zhAu93Ofc5ZluVc
      AUZqThzHuK6bv1QjAbIso1ar5R/WRr79fM5VLtji70XuPw/Y45SpeJ7nEQQBw+Gw0n6BPW+X
      fY0d1zDP7TgOvu9XRnGNe7jX65EkSakjoOy72Oufx7Yx73RxcZHFxUVgRAzme3ieNxE3qdfr
      uRRbX1/HcZwpr5UtMZ+LBDDgOA7f/ea3wHOpeT6n1taJen18z8P3ff7tv/zvOX/uHK+cPIVo
      9/jg9TdzEQeTkd6yF2sjapZl1Ov1PASeZRndbpder8dwOCRN01wVMvkvcRzT6XQOzWmLXH0W
      ByyeO6xf3fxu7BkTL6kaK8uyibQA+9rNzU0GgwFRFOXR1CiK8Dwvtw2ePHmSz7W9vU273WYw
      GOREYP4lSYIQe5FlIxGFEPnYB4mEl0nhIAhydcgOShpmYDxXNtTrdZaXl2m1WoRh+HxsgOLD
      bG9v02q1RqKz26U11iMNxHGcG4YGIc0Hl1JOuEVhOrFM61E2Ya/XIwgCkiShVqvlHykMw/xD
      9Pv9XJc0L6ter+fj2IRWZszaasO8H7QIRYStinOUuUjLvD322uxxjfpQRhxSSra3t/E8L1dl
      TJqIECLnpOa9LSws0Ol00Frn10VRhOM4+TvPsowgCPJIu5SSxcVFut0uQogpCVMlVe1ngz01
      No5jhsPh3MxKSkmj0QDIA57PVQWC0YOsrKwAI4mwsrxceo3jOMRxPIVUZfqiEd9FNcGoPOYj
      1seGtCEg13VZXV3NPQvGYzPPMxTnfxqYZWAX7RD7nlnqVpna5nneBAEUkat4rfFkSSkZDoc5
      EhsngVE3TN6Uyd0xXjWDqGZs21sH0ypQ2Xss+x6G6A4akDNEY+c7PXcJMA8YDj4YDHIOUUSO
      ssCY/XKLYH9kG3nKvDzFtZjjswzfg4j0Kig+o43EVVzfXqN9X3EMIw2MelPmRbP/Lj53rjOP
      VY0wDHPGUYzBlD2DDVJKer1enoZv7K9ZtguQSxcjbQ5KAGXerecuAWw9dRbCaK0Jw5DhcLhv
      5qW5vni87J4yt2TxvLl/lpphz2Mj2NNIgyLi2C7Vsndlr68YKLLXUmaTVD3PfueA3Ng2MMuY
      LzKbMqjVanieR6fTIQxDtB5lhhppb96tScdIkmRKelRJtapvbc4/dwJIkoSdnZ3ceg+CgCzL
      8MaGsAHzEhqNBp1xrYBZ+H4cz9xvVCnz01afilHlot5sxjE+bjNmcT7776clADNGkePPUsvM
      ORu57Htt5jGPeldlU9hz2MmB8zxzmVQ1Usggdb/fnyLY4pqiKModHEWGM0sdNGBLAHP+uRKA
      0b+Na1LrUZWOlJLV1dWJa42IazQapaIrCIJJXa6ECxuDzRhkZchi1mWPYaAs/L/fx7bHPoib
      08xv/14mgapSLQyRw2TUtjhu2ZxVCYa2EW0/t/Gvz0NQZc9mVCkzt3FE2NeZNBXzzMZzlKYp
      tVqNOI4r3ahlqmS9XsdxHDqdzgRTe+4SwM4BcV03r8gqcjATrOl2uxOVSlprijXM5kXaCG5H
      dsMwzCuegNxFV3xJBszHrVK9yo4Zt6rxMhwUbLUlTdMcQYpR26LtYoNdszAv169Kny4eKxJU
      lepZBmVrMVLfJjyTiWqCWAZc12XJCoYmSbKv+myDLVFNDKHf7zMYDJ4vARjENhRvUmLL8l1M
      kMrcZ8C4K036gv2xTB67eanGnQrkqpYxVo07tUx3NGMchMOVSSTzfFVi2r7WzNXr9ej1eoRh
      mL+jIAhytcN4xowrt16vT0kOmzvbyFumXpl12Vmrxfc6ywFQpqZprfPI7Ky8nLIEN5OqYnN3
      O0sVRrjhOE5lkK5snmIOkfn2vxE3aK1Wo9vtEsdxfqwINicMgiB/WDtiW+RWhrMbKWPr7iag
      Y9x6tvdnVkxh1nPY1xlD1fbV21D0WlXp2SY1wOTsaD2Km9RqNdI0ZWlpKXcBmqL+qrXZf9uI
      WuwKYd6rvc7ivcWa6SJh2ceMC9Uurq8yws19JjfIqDsGN4ApBmlsh1lZu2VQ/N5SyudPAACN
      RgMhBO12GyjnMEIIWq0WvV4vd93Z0sKOZJqfhnsZO6MIhqtnWcZwOKzkbGUGcNk1RR25Xq/T
      6/VwHGeqoqvIIct+B1hZWZkYWynFysoK/X4/j3yaKPdh2tmY+ewyT3ttxWQ++/nKvhEwpX6a
      SLE5XqVG2ol3tvpmsmjNeGVuehPUKivhrHpurXXOOHNpMtfdzxBszmG6KJgc/KJeJ4Sg0WhM
      IP5gMMjVgTIvwKzEqjJknuU9MC9rHtXFrMcEhzY3N1lYWCgtbZwFdoG6nXRn2xbm96fxOJl3
      WOSiRU5r/150EEgpc6lrg03ARc5vwJYoQojc3W10dMMkjRZgP6+ZLwzDKdVzFhjcsPHsNyIB
      hBB5WD6O41wvL6N0Y7gYI9b4oG0iKlNbZiGugVkGbpm3pXhdGZc0UmhlZYXhcJhHUIv69H4e
      ojI9vYoDHwZsdaBKOlXNY9Q8891mORNmPaf5dgbZjVFs44T57oYB2gzFqGbzEIBhZsVSzOea
      DGeD67q5i9MgzSwwcYJiJVFVxmbR4NsPWea5Zta9NrcuSoOicTzPXLZacFhOX3WvfdwYg7MK
      b2yVoep8GcGac8VxjBpq2s4YSWTKMmu1Wl6XnGXZRL5W2dz7Qe7yHEsde72/EQlgFmEe3hh+
      ZVzOgPkAw+Ew11/tNNj95oJpv3aZlCjO73leKYcpEqFtANvBlnq9nntC7PmLrVbKwNaTD0Oc
      tno4CzmNd8z2tBTVnVlSa5aKaFQ6W9KY343aY6u3QoyS5MyxsnXYUHZdGdjIb8NvTALAXoDC
      tOSbp+ZUSpmnuxpxaDjaftyymEJsr6PK5VdmNxiOaTwWBjmKcxtxa4i1KJ3mQewqnXwe2E+1
      sddiri3jkkWvWxnM8w3sgJtNTGma5sRgUquLc/V6vQnPkAFTknlY+I0SAOwRgfFu7EfJRmza
      RnPZS59XbSh+0OJHNOqZzblNrrnJiqwqazQfsV6vs7u7m39Aw5H3qy6zCfYwYCPxrHlsSWBy
      tcy7LYuGz5rLBoPwphquzO1qfjeBT7OGsgj87u7uVGsc4yY/LPzGCQDI3YaGyvfj4iYj0Py0
      X7zjOBP6bBUCFRG9qMPb19njKKVy47ZY7GGPZ641QRuzVttrMg9izmszzIIigygjPHsOs8Zi
      YLEKygjN/KuSCEY6GkLo9/u5ulev13O1zAZT1GQzSqNCHTYT97eCAGAkeuv1ev4iZoEQYiJo
      YtQQYyTZ3Z7LPvYsMW1/uKo0ARuKor94vVIK3/dzT5Ap4Lav349IDwtFSbYf2OswqR2Hmb9I
      uCZ4aUfvTRqM3aLezDUrNdp0eLYDjvu1WZwFvzEjuAzCMJy7KAXI1RDDSUzSm+3qsj/qPMXX
      s+auShgrjmMTkZ16YX94u7uBQZIity0i7ywi2S9del6o8uZUzb/fWMXIuP3TVh1tp4RNGGVr
      N+1ihsMhruvi+/5U1vC88FsjAQzYfv39wDZGYQ/By1QYg4DzGJ5FHd0eZx6jtIi4hpPa/YeE
      EKWS6rAen68SDiuJihK4aNPYXTPsd1Z0GhTBSNF+v8/u7i5a66mA47zwW0cAB9V3TZeDWS66
      opoxC9HsD1Hm2ZlXJy+6XE36hV2PnCQJu7u7pePbf8+C/dSnIiEfBJ6lCmav14ayyj4jARYW
      FlhcXJxoXWNyn+x2KoaQbJtlv3Wbtf1WqUCHhW63m2cfFl1lVQhlJ8PN+tBV4tucq4LimOZ3
      E+wx+TxCjFJz7drZKiO8CspUFnvdVdfOAwe5vmytZSqUecYqZmLKJQ2TajabeYq0aWxgwCTd
      mfjQQdf8WycBDgpCjFIlfN+f8AyYc0XuV+ZZsWsHZs1T9WHLoMx7YojC5lzGi2HHG4oelHk+
      aBkxz5Jw88BBvVCzHAvF8/a7t8HO9h0MBnQ6ndwrNRwOpxiciRQDOROcZ725gb7vU/2Wg7ED
      ygwmg4R2uoSt0xsPQpkLbxbsJzVm3Wev2xwzCYF2VZS9lnnmKVvPPKrAPHCQrNOq91KmchZd
      pva3MdJRa52nVdtMDvYM6TRNc+QvSw+fBb/zBGDA6IH23zbHLQtWFW2BojFqYD+7oAyMh6oM
      ytQcU7X2NF6XMigj1nn1YwPF1pFVUKZuzhvos+81SG/en8kSKBvf/DPev4O+s68FAWg9SqYy
      qbTFcwZp7Z1PiiqGXXVU/CgHQXwYGeYms9GOWEJ1GoSxCcoCgfNInFkfvnj/QWyXgyDXQdQl
      mKxdtiPGJuBlBxrTNJ1Sf+xvZzb5OGjs4nfaCDacwuSRhGHI0tJS3ubQLqu0w/JCiDyPvMjt
      y/YgmMWVbQ4ETKQRFI21opu2OL6JHBsviD1GmS1Q5mHZD7nLnqEKjNqxX3T+sFA2ZtGGMWs1
      tQJ2toB9v6n0s8tQ5yHG33kJYHrqD4dDOp1OXmTfarWmXrB5cUXXm+HuZUEomFSViohoq0+G
      EEw+i32tSf8tQplY11rn3qJ5wEaYgyTYlXWDsFNN5s3POizY0tCOFdhBMHONyVFqtVqlqdvm
      3R9UCv1OSwAYVUcZzm52fzFtz4H8I9oqjC0qy7jxQXTkYseK4rGimlOEMiljjGLjDqyKcdgc
      fx5vURWxFZ/tIHW288KsOE2ZDVAstFFK5T1eFxYW2N7eLl13v98/kB3wO00ARpVxHIetra38
      hRkVyFxTdIMaMVlmjJoPUaXzV6khVURj173a3qj91BeTO9TpdCY2eChD9KK3aD935PMAwySK
      NcY22JuKz0rlMGAIwM7ENWC+eRlDmQW/8yqQQeiqze2MF8hIAZszG0O1aCDOkgJVOqr5aRL0
      yrwutuFt32NfU3w281xFFc2+Zl7ELnvOgxKFbePsB1UeG1tdLJu/SpUz1XXdbncqbmLXC7ww
      RrANzWYz3+Z01jY9ppWI4a4wG0H3e5m2Pg17XRHKCKCs1+UsdcNwxoOoOmUGe5VkOIxEqNVq
      eZBqFswztkH0qmpA+7mFEHkk2L72oBy/CF8LAjBuMFM3bPTBMo5pkNPUE9jligeFMsQqimaY
      JBL7gxX7EVVJgSLyzyKCovFYJq3sNR0Uig2m5oViBzgbyp6pKIWL76Bs/WUOjv3gd14FssGo
      Q61Wa0pU2y+t3W7nbrV6vU69Xp+KMlaNX4Si8Wq7RIvXlHHkogo263hRQpWtz1YfqpDI2CP2
      v+cJZh12Zz6zrlkq6Kzvs586CeR1GTZ8rQgARi/CdV2azSbNZnNK7zQqiilKMR3GbK5tQv/z
      vnAbZhnPRcQ2vutZ85gti8wYh+XcB/FuzXPtQaH4Hcwx++fTwCypKKWk2WxSr9fzTT7yc089
      828hCLHXXLdYHml+mp5EJsxv9owyRFMGVYatreJUGXZl45iOd+ZYGfItLi5OSbLDlv/ZUKYO
      FdfwLImgzD9flQS4371VkrhMPRJC0O1282BpHMc0Go38vX8tbIAyMETgeR69Xo/BYDD1QXd3
      d/E8j0ajQRiGuRqktc5L9MqMSpgmhqLObd8zi6CqkM1GSpPsVeVCLVuf+btKGpWtr3j9fvfa
      z3AY6VSmohbfZVH3n4f4i+v48UcfEXse/+bb3yYMw8nSzAOt+HcMbHUImPJcGGN5Z2cH3/fz
      TZ/tlNwqQ6xoAFch237Hylp9FK+p1WoMBoMpV29xzjLEKV5f1PmNp6k4ZpmBX6auPY2k0HrU
      tLisvU2R2Zi1V0mBsoCkuS5sNlk8foJHGxu8/tpreapJHMdfbwKAPSIwyG0+vr0jCZC34Muy
      jB//+McsLy/zy6vXcMKQMSqYEcc/J/+eh/dp6zqVZbgqIWyM0n7TJKHf7bK4tGQWPvkc1oz2
      scLDWpPp8QWFq7SeGvvA85TOJUDDoNfDC3xc19v3pQjGyCrEXO+vbACB4NHDxzSWl0vnEwio
      hSzU62w+uM/ZsZvcEMvXngAMGEPINF+Caa9Mu92mVqvx2muv0e12OXL6JA8ELNYauI6LKw+e
      blsFcb+PH3c4euYUAP1ul0e373L68usHGqdKfSm7xsCzNnDteR7evsvicovGeIfOsjnnsbHm
      vU4IwYOdDkuvvDLzuTIriDaxScvsR/p6gXGTmvwa02nagPn9wy+usZEl7GYpQwG9OEIKgee4
      NIMaC2H9wIao8T4Z0DmHtuAp8HIeBHsecNiZ91MlJ+YoxA18T46kUMWY5vdkaZm/+fWHNAXU
      HId333zzxSIAA6bg+u7du6ysrCDlePNtrfnowT2+SIYMo4gwCBBpivRHLzrJUrb7HXrxgLXm
      Mn5Fwcs8UPqRnwPeflXcP4cyHaoKtIZMoZ3J4qN5CHjCmxSEYxVs9sRBs0kwtgeTKOLvP/r4
      6+kGnQe01vziyhX+8ac/5d69+/R6PW5321zZ2sT3fY6ur6OURlkNmwzEacpG5wmp2r9loD1f
      4QBG893vg6c71xh++ZfobNpgPkjA6Kv08++NP/5jEIMqn8v8Le8+wfuLD5GbB+/nY0M8I/Wl
      CtwgYPH8+ReXANI0RTUX4PRZrm5v88vr1/nRjet0ez2U1iRpSpzEZGmKLomUplnGdq/zVB4Q
      A6N8+OqSw/jRT0ju/z1quDVzrDJf+7xreFYgANEe4P2nXyHub09EpvNrzO+pgjQjHoz2e7Bz
      pYz7N0kS7mxv87dXPiepaGxWrLYr8xSZmFARXkgVCMYVRErh+j7useNsdnYQUZ80U6Qaep3O
      aGtOlaDDG2h1BJEtTYzRjwak9Saes/cay3TYXP/XGgYJbPdBRdCyjXCNFOX8KDz3p3D8O3gL
      J8jU4XOW9js3i3DKqtwqx6z7ZG+fRq00QFd3rlPn1lAnlslUSjqOdptkN6OWOo7DcBgRp9WF
      OeHiGmkKtkZqfwfTPK0s8fCFlQBCCN47d5ao20VrzSAeIhDIcRzADULiNEUg0IX/YJyvg6YX
      TccWjE96ivt1I/jRTfj4Pt5Hjwh7exHksF7HC32GJTsfymAZb/k1xAwpYeae57nn9cLY98yd
      Bi0AV5K9egxqk3GLqQZdQkDgIh05xblNja/jOJxbW+VfX3690uYK1s7R2a3eJcZ0jigj3hea
      AN587TXcTptMZajCx0+iIUprlBLo7llEujTK47H0Wq1GqpLpFG3+mb8HgwH9fp9utzv6uPd2
      IBm3PgGSLyc3eDt6+hT3btwqXe9B9HatNbEaoHQ119xPVTLIau/jNvf8JcdMAK6MiEySmtnz
      wTTFMtH5/bo/n1xOSR7fqDxf1mnawAtLADBCgqVaOIX8WilUlhHUG2itSOMIGButwvJUjGI/
      pJaI11pPtEMxBTIABO5YSQY0yHCSozmuy7A/QJV8LFtHngVaazKdcLXzDzyOvjzI6wD2co3s
      JgIG+efLGp3MKyqC6TBhunpnWTbRDsaOvguxtxvoLOJzJTh6OgM3HyfLWPvxT5AlUfcX1gYw
      cPLIEZ50ehPH0iRGpSlR1kNrjV+r59HKEeKPYroCge+6POy2Ob92BJGJXF2wIee0Z1ZgdwBP
      eqSegzjfmlrP4soy92/d5sT5s6W9iarAdh9KXI56r9J0VkiSZKrjtkHCibVRXqNQnONpwCCl
      PUccx/nGh0bnt9tWZllGGIYMh8OZiYqeX71VkpaS7rmzqBIV6oWWAACvXLxI9+FDQm9PX3X9
      UeKZCwSNBtJ1Ruiev/y9jxB6AZeOHMURMt+Iuyz1F0C4DuK904g/eJX07aMkcpqjnrp0gVqz
      yb3rNw+McDbXW5BHEZlHHMe5Omb/S9M0z5I0Pfe7Y3voqUAcPJwRRVHOOIreIiMl9ksbb4YK
      R1fYAUIwPHoUMfYE2YzlhZcAUkpEtwMO6HBvtxnX93GDAOE4VGWqBK5H4Fa3DSzlSEIgAhct
      BEKUf9CVo0dwPZdHt+9y7OxpALJeRO/DB/hHmwTnV/d1dZrkMbsBAJDr9EYf1zWbsWcAACAA
      SURBVFrnnTOKXfKeBua937SKKUvsgz3JdvPuLr6rOHV8YWqMMLnHO82fkg6vci34EzIxuz58
      ojpt7if6GsPJI2s4cUo9GGUlCiEI6g2k41YivxCC5cZ0J7q5YR9Ou7iyzKDfp7Mzap+ePOqS
      PGwzuL41V6TVbCRobyVldpo3hmUYhnnr8SAI8n6cT4P8ZamBcZaxUbF5RdH7U5bPL4Tg2q0d
      btzZLR0jjO/iexon2iLUOzMlxVQfpP0f6esPF8+fx9OatUaLwCvnHjYIIVhttgi9ADXsTyBz
      VSrxxP1KcX5rc2ZWJsCZVy9x87PPuXf9JklTEF46QuOt45U6htICXThZRKoJ47CQDPhV5RD5
      jsMRq7XLYeCPv3eG3/vmidJzveAiwyyk6xyjL1by4/M8z0sCAPq9Hp3tbaSUHF1coVVvIite
      XuD5HFtcoeGPpEW6cRfU9M40s0AJwZ2VJQJntldHOg5vffcD6q1Ftnee0Hj7OP7xxcoP2x06
      DOKDF4zYNQBPHx0uLwqap2PdLFen60pcp/x84q7xaPnP+PnW6yicvEOg2VDPdN42W2iZmECS
      JC9tABj7iR0HrRRCSpZqTRbDBsMkJs5GkUlXOoSej+dMelT8M69W6q+zoBZmNN3hFBcughCC
      NE5ora6UnrdhIZze07hsvOIan3lKxIzHn5Xt+TTr8MI6rZXRO3Jdl8FgkHfomHjHyYDzd37A
      rdN/inKClwQAcObMGYKf/pTHv/w5kYD6Kwsk4Q7KiXEcn5o8SlOcQYry11WWwVj2oe2/Vf04
      1+7c4NWV6nJKA48fPODim5f3fY55NJh5sy2L652cZ5/7D4nHpkfQYWH73j2OvNbK92IrXafr
      8ujUHyH8Om4cvSQAgKWlJU5fukjt1HHuR7+mnd4hiSKk56FkTKK6DMQGa/IbODM8DLauPeh0
      2L5/D4RgM7rBoneU0BnpwQbZVa8zcW8VuO7sSOjC9g6DRp20ojvePKCTBGE1ENgvf6hyvWIs
      UdN05PESYs8wzovp9qrSTHAxdzA/hR2SjlsjGk9XFQPK5ALh40fI5AUoiZwXhllKnN2jqzZG
      jbaCgGg4RIY1ABLdYVddY8V5s/z+ToetO7dxHYlKE1bWj/D6O5dBCF7nDVRJEtvW/fts3L3H
      +qmTs8W/FESDAa5f7nId1mtk7mRCXpQKHnc8NLDaSAi96ihu/OAhabuDf3Qdb3mp8jobZhHB
      w1u3CWohOWbnzzZZLKCtI2K08Hxsc49m7/69V6TN/+z9oul1JwOa00Y+ODvbOO29FJSXBDCG
      hh/wILXySYQYpySM0t9UmrIT3SR6pED4hI0mUbeD0CO7YbG1yJvfeq907BHDm0aWtZMn2dnY
      GEV+z52pXJtWmkZrkXvXb7JybJ1aozFxPilpu77bd0nUSGrs9D2OtfaCRAdRgw4MGk5ePE9j
      cdpfPw8UK+dsKFuzQe44ilC1xer7tEZ22iPkN5QkvuZdIQ4Cg16fZGkvE1NKQVCvkYzrh13P
      w1+ocX79EkQu8XBI8/xpZCHt4aCGXKO1xNbd2Tk7Wim++OhTWmsrfP7LD3n3+9+d8pUXy/8c
      ufe3/bt9TV5SePwY3toqwsqXn6c0sXStT2HIzor2CiF4sjOkN0g4XRIM23m8hfCnGUEOWYqz
      M2qp7mQpmfM17wt0ENBag+vgCB+l99KbXdfFaViJbUgkLl6tRlCr7d3L4RHm4c2bnH31/Mxr
      Xn3/HaLhkCAMaW89mdhBxkBx/qV6gpQj9aDKO2QTgbC64R1UOjyrOIKZu+o9SilwnHJnw/rJ
      E2x/9BlRGBKUbJTnjKW1BjIrev8yDsDoxadomu7RmdeFTgtXlO9IfmhuqRV+iQpThGDcO+fY
      2TM8/PLOvvNLAUu1lKV6SoX7vPQ+c+wgqdcTfx/QBWTv5WB7buxO0AaWFgNOrFcH1M6cP8Pu
      xqOyRSIG03UW8FICAKOPkAlY8y7QyzZI9Ohl2d9W4nLEe+2Z6s5b9++zenTtQPfUF5o8ebTB
      oNenNu4pBOUSqNfu8PD2nUl1yaQrW4hq/DF64m/7F6xrzf17dej2K9ndesLCe28f6Jlgr2mZ
      yVMyGatmU4xZ712g0IaXl9Gf1ohsrw7DhpcEADza2GBxdQ1X+JwOPmAjuUIvewxkgCSUi6z7
      r1NzptOXDw1a09vZ5fipg/UBghERbN69x/FzZ/HDcumhlOLJxiZHT57Ig2hlXH1WyrMxHt1H
      myRHj1QioX3PnWvXD8Qk7KQ9s26TBQrz7VHcGvyS3do395mo/PBLAgB2d3YIGiO90ZM1ToXf
      INVDEjUc6fyi/sy9Jo/v32d1fRXH3X//3SKsHF2n1mxy87MrvPreO8DIUySkQCtNv9Ph+qdX
      OL29i/fB4szIq4bKtA/jjhS7u3D0SPU1UwfnfxY7PbkYCJtXDdutf2v2BUKgHReRTttCLwkA
      SLJsCglcEeLI/XXzw4BSiv7uDqfefav0vDEG7RLCYjlhrVFHa9h68Ij29jbD/gAvGAXCsjTj
      7OuvcusnP+eClNSY3KbVwO5gwDBJOdYauQ9LiVwI4lcvHcow3u8ek5tjUqLTNEMpjevK8d9p
      aeHOgUEIVK2BjKbbp7wkAEYtTvLIpFa0oscoBG1/bULBNVufFpvU2t4L+2elyqAUaZKgsmzK
      jWrmMfqvveONUQuMinD+zde5d/0mJy9dQGVqHHzag5VLFybtmIKPfbFWYyGcTlybh/N+8eUO
      SwsBayu1SkPYjxV+qumFEi2n34VB/uFw3BZFwbVbbS5fWsoNcbONlKkTPiyoZhPd2cltAQMv
      vUBAlO61y1jr3+b89i+4+OTnLA/v58fNBxm16RiSJAnD4XDi9zRN830HZtXPOq7L+pmzXP3w
      kxGRKDUSzxYimQIV0xvHhPZNNiOA5/uce+M1PN+fQn4wtLtXazuVCy8EziGRqrXgE4Z7BFkE
      N9Oc2ow4/iRmuVPuhhVC5JuVCyHwXMmbryxPpDPMs9/CXOC4pMurU9rZSwkAJErlnCBI+7kO
      G6R7MQHzEbIsyzfVMASRJEkexDEF37NACEFzaYn25gZOt42/9QiRpSg/ZHjkOL7vl25gDVQm
      eZVzblOBPx8cxJV7ZGXa1z5eyHiwyVWUQdnG4ZND7W1Z+yxA15tkKwpnewsxftaXBABoC6E2
      GufwsgFaODyun564rvjBzKYVphPEQbIskzghkBBu3IPxB3aGfcLN+wxOnJsKdBmoOg7lKc46
      ycj6MbI2vbv6QeCgAbLUFdxb9QlSTad+cEPfnnO/ebXWJE+2SdttvFlOBSFQzUW0H+LsbiOi
      wUsC0Fqz2++zOn7JsVvn5so+LjULhBBzueqm51X4KkMoMSGWZRwhshQ9o9a4YkC8e/dRrRZp
      c5Qr5CrJ4Md3Uc4j6m8ep3bxYDGHg0Aej7CODQPJMPjqKs0MpO0O0cYmKstYkvu8NyHQQUC6
      fgzS9CUBPHr0iPQr+j77GZTKddEU+tlIB30IvdzZ2WXxP/yA+NwZ2v/mXwEQxJIkVmhPEd3d
      mSKAYhrHLD//3EU/JXURXzXosU0U9QekesDmR7+a+94XngA+v3mDlZPltaZPA8ZTU2Z8GlB+
      SLwQ4O0+GaUFC0m8sg77tEAsQ0a1uMDg/XeITxzLj0e+gtBBSIfwzPLUOGYvZaNWGbvGuFyN
      vaG1zv82P4uesIn1PcM+73b3iipwWy3Sbo9kt8365Tc4uTB//fELTQBaa7pxTOMpCklmjT1P
      O8F49Shps4VME1RQQx1CnQLQjkPv9749cSyVioXvnKK1vIzwy4nKeGJM8yk7ImtfYzxPVdvA
      Fsd8lpy/GCkugnQdamdOEXoeO50OR14SwHzQ7fWIpKCx/6WHgrm8KkKgwhqKmlU9VZKSUDGe
      EAI3HeClA/rBNJcXrkQG5Z/ZeKuMy9G0ELc7xxnIBgPiR5u4x9bZzyfz5dUv8MPypME9mD+C
      bA6rLMMPfE6/cpE0jomjiCSKWV4fpWl0222OnTu7z7yT8EITQL/fxyvxnz83KDBJWyevcnWW
      /a6EQ7qf8VcCdgqCCfCZDg5T4LrIwMfzffxCs63iI526dJH6AbjwQaDf7XLjkys4nouUDl7g
      8+STz/ZUszkya214oQngyNoa4rNP0SuFbTmziGzjJwjHQ659CyGf72sqcv/9Oilk0iOrIoA5
      Xfv7tiwJAmoFW6mMCJ5xf4kpqDebnH/zjaks2OFgwMc//DGNRoOj+0gBN45JPQ+EeBkJlkx/
      /OzB35Hd+QvSW/8v6vHPfzMLM5Cq0h1q4CtoZ3IIKPYT+up9PuV9jcJajQuX3+DuF9dn3qu1
      pv5kGzlOiXihCcCI+ylEsvbi0qp8I+vnBe6DIaKfTiDa3AUrzwMbp+Z8PpMW1UQhBCvHjtJY
      md0/SSnFxlKL3jh95YVWgYQQXDxxkp/dnNxcQafnSfu3ENLH7R6Fm7f27sGk7Ix7GVjf+yCf
      PokTou4ulXhsn3hkj1zssFAy6/jeJ482WFwoLxR/lvA8fP3zgBCC5uIi7Z2dvQ3HS8C4d9Vw
      +8UmAIAL587xv/9ff03iGUQxCDbOMd98UrhDjFFvdJ0xGOPdh7z/R9/Cm1WYbY8SQrCwRK+K
      AEpwauP6Vc5ffmPvEjHK9Qk2N2le+4La9g4yy0hqIf1TJ9mp1/nqtfJpcHTEkd4veFz/Ploc
      Lg3isHDiwjmu/PyXXP6gPJrvOA61MGBw4z+Qbv7sJQEIIbh49jhXN9NDcbI8UOT51JoLePu6
      /w4Pfq1Ow+JsjtYs/8M/0rhy1aIXDcMBS9vbLGYZSasBR0pSILTGzYakTngotUWjyVRCokc5
      9q708cb10pnw2Q6/sVem+JxAa81mfJ3eiTt83N6i5R7lePgGrpyM82SdL0k3fjJa93Nd4W8h
      SCn5xutnubrxxeEQ4TdkiDpRxNG/+huCjc1SHi+AIElp/vV/HW2S8c6bE88ntKIxfMxu4yTz
      KG9aaxQZW/Ftuuk2/axDovoTr8wRLlkgiNQ2klcI5hr5cFDWieLh8Aob8Q3wNINhlyxIGKgO
      FxvfxZloazlyKmhecCPYwE6799yMt6cFY7gv/voj/Ecb+TEBOE4fz9uevD5Lqf3oZ8j2ZH9+
      LR12m6ehYmvWiWu1ppdt83n3H7g/vMJ2/IheMtgjvHHpZKZTIrfDdnaXa71/YDO+gWb/LFKt
      Ne3u4Z0NhhgiNWpm4PkeWTry8gyyNlHWnbjeWTiPe/TbIORLAgB4vFveMuNp4SszDpWice3a
      +A+d712mVEiaTsa1tQYRRbhf3CBL05J/WcXxvX87yQOud3+c75km0bhSjTaQ1ZpXBwPc8e6Z
      o06Fmkxn3B9e4W7/I9I0QaVZ/q8oNZXS/PqzTXbbPdLxrpt2+aZJw+j1eti5s+b9ttvt6oZa
      iOmmxkJSu/BnNN//X1+qQABx8tW4Og+sHmmNl8YkXrkhbRDd7XZxBkNAo7XYc0Zpicbe68wj
      iWKSJGXnk6vcCup7IwlIhhG37z6idqSqH5JAy13cY/cQTjUx/wQgteptrffZ5irXtu4jBqcx
      DoSTdcWr7749fmSN40j+4IOTeWkk7PULUkpRq9VQStHr9Thx6z/xePU9+rWjeJ6XJ+8JrTn3
      RPDhAqOU5/E4C+4RAlme7CKD5ZcE0Ol0uHJ7C+GWhO61ZinOSKWg63313gyhNV5WTQC5A3Si
      u4EeeT2FmLIFpJT441SPxcUFjl24MHF+2OuxOchonijpS6o1iIwkvA/y6Qx753iCGy8g1ajc
      UW+VbwBoqr+yLMN1XcIwZBBFfPLgAe+cPk0QBLQv/mt6gwRv3Pu/1Wqxu7uLk6Zc2BDsLL/G
      Q32PSMWseuc4Xnu1NHBm5n/hCeAXH35C4lSU9wGrUUbszEkAT6nxaCnph9VNZXNVp14fd6XK
      79xX2qRWQ12tIVMSq2R4ChwUa/ozHtAn20dTFiNlaNYFKO8mMl5mxpQEQUC32x0R7rgZAEKw
      3FzAdRyCICBxXYJwVMNdq9XodruEYUjm+3zx3ju0pKTFRTZ37/PFf7tC/6QLaPR4k3OlVZ7C
      IR3nJQE82NypNgSF4NZCgP4tsY81Y29MGBKvHyF4+HDqmkw6DAOPxmA4cd/g5MmJv0f7iVFp
      /Gtg13/yTJ5dINCygxa7oFrMik00rb3EzE71F9dHPYlqtVpefjpaupi4XllJfGsnjvPowSZH
      LlycmU37whvB333/TZoynoy8WqCkmKgZngWC6U2ynzWYNIj2e+9MbYgHEAU+G4XtlOK1NYan
      9ghACvDdLA/plUHm9Ol4oObwEs0Lynk8fojqa9I0ndrWqCz1YxZSm/Onz59m697dmWt64SXA
      2TOn+J//5Dv8H3/+Y1KmC2Pswuyql+0Ap5trrG+miIWEnQVJ9hWxFrOe/pkzdC6/wcKnn06Q
      QX0w4PzdvW4WWRiy9fvfR+/TqWJqHlm+rWkVlPUczccaH1OigwPcv/klSRxZ943Paz3Kz3Fd
      pJAorfBcD6VHqQtxHI8q0capKMKqUqvyuO0+2aG+2CKo10t7ML3wBCCE4NKF8/zRO3f56w83
      DuW6vFxb4JTj0BxoRDTE60oengigkLD1rIJmZpwn3/sOWS2k9eFHyCSZvIYR59/6/e8Tl0WC
      7QvLDoto1BYxVchUkQXuSHQcEGz7QIsR0p84f5Y3vvFO6fXtdhshRN4axjTOSsbPt7i4yM7O
      DlJKXNdFKUWj0chTUsp6nd6/fo347me8cnGkfvXlOjvOOTLxcpM8YPTSLr9ykb/5xZfg1nC1
      pplmNNMMT490y77r0HYlUeEFB0JyzA8g2/PMBEOFHynicMRxTEMrg7hFNcnU3JoGWNUlhTq/
      HgAp2f3G++yePUPr7j3kw4c4WYZaWGBw6hSdY0dxwrDaNp+Jz6M5Gn2XWhLQ1QmDevUGdvO1
      RZ/dhU4pRRiG9Pv9vClYv9/PdX5T9KK1zjf9TpKEXq/HwsLIeVCspXBVj3eWPkaEG3jZKEjY
      yr5kOb3Kbf8PXxKAAd/3CNOM84M+x4YxgdrTsEdCWpBIwYbvcrMR0nGdEYevGK943Lj3hBB5
      Iy37nI301S3By2eLmk12332H/iuXcgIyc6lxe8UDg3ZZ6be4uH0SqQRpX3HtyB12w25JEcwe
      YZZXiY2kgGByBxr7J5CrMouLi/n7MY0FTE8mpRTLy8t55zwp5YQhPLkwxXL/R3jZFknhVKh3
      OZn8+CUBwOjDxbc2+P5uhF/hFxCApxNOqIccGQy4Ga5wyz/BUHs8SiJOWp0cokAS+TIfG8jF
      emztZGj6fdptR4pNcAsrLT1q2jUGQZBvKmE8KPNAXQ9p6AGbYin3CgnV4ERbIpBoCY5yONZe
      ZSfo7HFZDTpSpNsxTt1BLnogRinaQk7aBAKB1I0xwlcbrnaPJfO73WnPPJM5Nou4naxNmNxD
      eB5JnJAlCY41fl1tvCQArTXtX18n/uk1GgKSilpt7W6TLf0M7e4gBJzXsCxWucIf8klf0BEZ
      l4+3yOou7ZY3pS+bDxZa2aIH6YGfL6QEXNedKHA/KLyXfcExtvgb51t0xi0ChGqhme6mbK8l
      6yT0f/EEFSmEFISXFvDPN0a2Q4m0EmocByh4dYqFLXlXO63p9hLqNRdn1jY3FeCpbp46EdZr
      DHp9hOPs2Qu8dIPSv/mArX/8CJQetdUrMVS1jEiXf4j2dnItRAhYYos3xH9G0ONmmvHDh9fY
      XnZR7m9J4GBOuCGPc02cpscecQocHjZAyVHmZOpkPGhtIYXME/KSuwNUNM6sVJroTh+Rjfby
      KoLWLjJbLZ2/qtKtN0j4j//lBjfvtKfuidKUzx48pB9Xp7FkYi+iXlbsr3nBvUDZMObx3/0a
      xnv4ri63SB5vkyhgnM2uEKjwNri9qfsF0NJt1sUX3Hfe4fFOgv7ZR1x6//KEqP1tgAm/udaI
      bA/RHspVHlJETsG2rtFu/ZKGt0zfHxK7yfjMGMFlkXtjwtVT8zvpKdCuxUD2b8NeDz2+9/4J
      jq1PR+oF4DrV7k+AxFkikS08tTtxPM83ovFiS4DOZ1+Sdfd85lJK1leW8KSm5iiC44t03nqd
      nbf/Od2T/wNJ/dTUGAJYU5ugNdLx2O44fPyPPycZzlAfDgkHdaIaw3oqFybTBN3yluU2SKdF
      4pxip97Jkd+G4EwDWRurXBKCC01Eiaoi1AIy3Xt3Bu/t9ZWtU0rBhTMt6qE3dd53XV5ZX6c2
      g9Fo4fKk/h2UbXyPf6ZKcJt3XlwJoLWme+X2xLFRO0OHI8stbrYW6Z85TYpEyRo4i8StN2jc
      /wHBzocT9y1H4PmaRAgQkn7W5Nd//3Pe+f338Uu27HxeUCwayXVrVzJc8mFQ7dYEENLB5RWy
      VKHdjanzTtOj+b0jZO2YwMlQS/US91eIG19GcDDbpIyzHyaOEnnH2Vj4VywOPyTVX+KKGkO5
      wn3xGh1WX1wJkPWHJDvdqeNCCJLWIp3TZ0iQo6RI5Y3YlnTpH/sXKDtzVEM4OE4jzawxJKmz
      xIf/9BH93d2pOZ43VHWRmMdSEUic+FVkcqJUBElf4q0GuEGZ0dvEi99B6D3bQmuNniN5b1bn
      C1saDLs9YiuNugxid43HjT/iV53v8Ln3b7kd/nck4UnCMHxxCSDtDNBZeb+d3cVFpOPk20tI
      PKQeb4zt1MkapxhXfiAH5xHROo3iWEKQygU++tFn7D4q2bv2dwgEDjK5hBO/Caokt14IYpOh
      CqBdnOQcbvQeQteZIjXjRR0juRgOkJ3d8VDzlWdqrbn+i1/x0x/8JT/587/g8d17lSnWZo2Z
      clC4E+t5cVWgTM1IgBv1yZRSorJR0phWTaR2UXKIFCvIZBXRO4ccnAMtEUpN+PC11mQaHHeB
      j392nTfey+brQq01oRrg6xiNZCBDUuGVGpbhrU2G58p3byyCO86fn4I5HVYCgcjWkGoVLXdQ
      8jFadtEiZhQmdBGqjlArY2+PV+4KLRlbByE62JMSq/cfsru+RjYueIE9rm/+Hna73L/2xahZ
      bpZx68OPWLMS/ioeYi/OMR7rhSUA6bnjnPppIqgNR4ax0HseDwEIXUOmAeubbyJ3T7Mdp+Ni
      FE0vjsl8N9/ZME4yolSzUHPBX+DDn93gcpKwXtG2z1Uxp6LbHIsf4uso918rJB1ngbvhWe4X
      dJBkeXZbX9u4LO4QOb5gSq3x9ehZo1n5E6qGk10y8d/ROzKIxZ69kQfBbOItiQAX4YnV4t1A
      McosHXdkcI+75rmz2rWPkd3UU9jHX1gVyG3VERXb6Szt7BKMvTjF79R8sk2t28eTMt9nSgOD
      wJ8o5/M9h2Y42uTtWDdCBk2ufPyALz/+dHq+ZIsPOj/ibHSLUA+Rps6XUWHKUrbLm70P+f3F
      TRyV0B+Mor1Za7aBvW8HuRLk/2Ml+BdKEFTeptDONmOZwAiFRoQ0774As7T/EeHs1T4Uz+Vr
      rYW89u0PqC0ssLi6yqsfzN4ruCz1wuu/wDvESN8jOLrM8O7m9DmtuPDlLe4cPU5nYQGj77c2
      Nzl668s80imlRGkYuJIkDPHEKJ89CIIJkb3huogswwmb3L8fkUQfcumbo2zI5eQxb/U+xNmn
      6bgAjjldgrv/xP/2yTqX3zjOhXPV3c9sQ7Gyp7+hsqlD1ekKaIlMj5efKskFmuL04ziErdpE
      aTpiKAfMxD1y5jRHzpwejVc2VwHqusfik0/orI3qkd1hhuj3+7pWqx1o4q8LdK/eYeOvflp+
      Umv0MCF2XSLHQfYHOEma40uiFE/iBBDcXqjjr6+z7Izygj4ddGais0pjjizDW998g292foSv
      p33sZTDotJGOx8+2FvmcE7Qacg+BRyk4wCQn1mPiHZ+YgDRJ2N3YpHX0qEmxJxirNMOcBsry
      +2f9IcysOfQ63VG79PFBd9hhyRTtCBgAvtY4ew9QMoGg8kHsqUuuNn8PH33J66+eoL022qBc
      JurFlQAAjYsnCda/INrYnj4pBPgu/jBGeC63Lr9OiuDk59fwBwN6Y7fnUApqq6useyMj7mxQ
      o68ybkTVrVak67O5k+Bf+Xv845QauKX3SYlfr/G9eoLbOErXqe77uV/FFEAaxyw1Qy688epc
      8x8UzBo+/9VHXBp3gfgqxrefsaxhloEvHZfd1Qsj4tCazBUvNgEIR3LkX3yT+//336GiaS4s
      pEQHHr3mAv1GA6U17aVFvHaHoVIo4JNWgwsTOzoKms7+rzV0JaeDiGEvI2zU5yaC0QxwIr7P
      1XCh8r7fRMe6KhUkSxLiysi44dViIk3C9aq3dd1P1cnaQ/QwwVmuI/29b6G1ziP0QoiXuUAA
      /uoiR//0uzz6wY+miUCAcB0Wkoh6p00vyYgfbpApRQZ8utjgUeARJhFLjocUgkxrHiTRvrku
      y35CzVUkKehuj7DZOJAO3Mp2DvnEXw1Urb3bbvPxR7f56LMnOY7vKUpjKKgvdTfmT/7HP6mc
      y04fLx4ffvyA6IuRXScCl8b3zuMu10ep5lnK7RtXubWzw2qjwaX1Iy8JAKB26ggn/t0/Y/M/
      /5zo0bQ65GYZF7+8xaOtHaJM03McPm01eOyPOP+deMBQZ7Qcj8dpzE62f55N0x1fIwRpBoNO
      j1qzjihmLCpFmiS4noeNJaF6VrlGX62k0Eoh/AayNrtvvw1Ct6eIYhZEWRdXBtDNcuQH0FHK
      8NOHNH7vPAAqCPlwexvqNXa14kgtfEkABvzVRU78u39G78Z9Op/cItrYRiXpKFNUCNxawJk3
      L/BPmxv8KvPIrJRfpTUbScxmWqJGAY7xxmidG8cTaCcEmYJ+p0d9oTFBBPFwgOsHJNEQx/J1
      z9upYl94hvhfumWShrkxee8ubAowFXP2+S+3Puf+zg0c6XJk6SinWq/BcJrxqOHeN9HNOonK
      cMd5SQ/b7ZcEYINwJM1XTtG4dBIVJ6N0iSRFOA5us4as+Xzzxpf8+s9/q0BXJQAAGmBJREFU
      CCUdJPJxgKNhwIVGyHroU3McpBBE2chzdKs3oJ/GjPs+jW8SKC3pd7rUFppWkbdESIlXm/T5
      D8Uz8twdkJCiVBClDgtBOnGrXcQyGnYSYQ8LcRzn8QxTE/z5xk+4uvHLPIh558lV5NmQEwsX
      UJ6EOBu5qqXAO97KxzrSbCKTFHwfKQTnVldeEkAZCCFwAh8nmEbySxfO8kfv3uO//Oo2Lb+B
      LySbaYxi9PGXfY/vrS5xKnQQQqKtvjoN12El8LjUrNFNm7hyg0wP7YlR2qHfHrkN5Tjf3UQx
      bdh2p7dEfeagNa5qsxhdwdEDhu5xOup1urFDM0hn8vVJgphzl3lzL5adoDWe5xFFEVEUoWTC
      9ccfjfZNEwIhQKmMT+79iLPvvk747dPEVx+jBzHe8Rbha+v5uM0g4PfX1lHH1liu1TjeWnxJ
      AAcFIQT/8p/9Hi0npHdjVCB+fdjn6rDHmUaNP1pfIRQZCxv/J5m/Tm/5X09zWSFoej6+cxKH
      W3StTFKEQGuHfqc7UodK0jUyJPf9k6Xce5YbsByqubOrehzv/hXOmEjryW08f4fHi9+Zv0PK
      OPBloC40v+cPUQh+GAcMK/KFzFHP80jTlDAMUUrxpPcIrTOEFOMUjNF1UTYqWApWFwi+t5Dv
      dSycvT3gllOHP26eYHN9mWTc7PeFTYV4GhBC8NrZs3gS0NCQDsfCgD9eXyF0JAKFUBFCRbNG
      oZcdJ5BNmsWUDCHQOPQ7fRIkdwYWkmq4459hYKtAWiOUQqqUQdRjs7uF0vttZ723jipoJtdy
      5DdXNpPreLqkOq6koGW83An35ntezOtuyhtuwtteeTmjtmJ3pk+oaSSwWF8mcGt5aaZgNO9K
      41iuJkkp8TwPr+BKHfqS6/EuqRT5jvMvJcAhYeH4MqdePcbnH37EkzThD4+fwRtXQ2kZ0D72
      v4BwZurYCo/t9BVWvCvEqkesLEQfS4Jeb0DqjpFdw6Z3hFvB+ZH4V4qFqEMj6uBlCVIrOhq2
      hWRRCjphi2xGTKLoaClKD2l2yLSiwgKF1ClGZtnBqMp+RnrveF/LPMDcn9V4tMKFHLg13jr5
      fX515/8jUyOjN/TqvHPq90uvN4gOEDtwO+lySWVEUUQQvGyMdWhwPIel147yyY//lleXjtHy
      3JxzCQGM96VSaCIUEkFQknwT6wW2kss05FViVfDtCwik5LSXkhFw3z/J9fASSjjUoh5rvU28
      NB65GqUc5SuhaQH0tmj1d3hSX2HbbyLHu7tPdI0oIJnpvmYQueecYIHPEVqPNRlN4i6xO5QE
      YZZz3NFQk4aq67qYFiiG0IQQfJT6DMaNea9n7kyVrarP0NnVN1iqH2GjcxdXuhxvnSf0pjNj
      yzJgHSnz43EcvySAp4HA9xnIFicWj6E1pGMO7khwpKArMq44A7ooJLCuHd7IBBKHDB9DDIlu
      sJ2+w2e711n1n7DsxXhSjbJMM58HTxTJq28zCNdACBYGbda6G0jGfYTIQCsQe0SIUjhCs9rZ
      QAYDtppHSNKUWXlftuGapinKO4oWb7KmvsAVGQOxyIb3bdAOcRwjx8hk/8y3IFVqRGx6Uggq
      4GrmTcxXBJVlpEmKH1ZsFCIES/UjLNUnayHmiX47rovneXnrxZcE8BQQhiH//g+/Se1+mzgF
      kzWaKQFS87EzYCAUoFEoNkRCE8XrSpPqgCGLGCIQwqGbrvMPj2uEjsIVCqUhUqOWicecR5x+
      a41aMsiRf+Tqk7iMNtLORgON0rSlBK2RUrCadEmHPru16uxRGBmcpiWhaazVb7zLPS7jSU2s
      PRBO3jzFLgByHGcC+fMWJJb+X4RiDyADsbPIT/7brzh5coloOOS1996eChCWwTydJuxGulLK
      lwTwNCCl5NXTp1HZI7Z2B3T6Y6NXZ+ySMkCNFQAFZGjggRS8qTUQ4eoIhwAHTYRgJfBBCIbK
      AZw99cANeHRng/VzXU6l20hjIopR3mdKYGWCssdyLaQ7ErUZ1lvMKoO32xFOHnNJmfaYFLsy
      28Rg2wZGfRotycpUtVScCcQVDhttzcb2E8giBv2fcvLcaZqtxZEx7Ln4wXz7MdugMjVhE8BL
      I/ipQSXpaFcTFELFuK7H+uoS9NqIpEeqM0z8VwANMcJLB2iSEOIhBKRaU5OiFFFE0uG1777N
      SiAJhrM8S9Xg6IzFYZvtRnlzqq8MZjDk2RxbINwA3IBbDzNu3v2CppfhSkiziO//q++jspSF
      5VE8JI4iavV6XvYphCBLUxzXJRoMCWohSmUvCeBZg3Qd6vU6g8GAk0dXcnfd6cUljnQH3Iu6
      uQdFazhqEBzwhZubxK4YFeKUQT1ULKysUu9sHDipYGKcuMd2feXA0d8qmCflunguEJK36wsE
      QnJl2OXxjA0KcwkhHYTfBA8cB3Z6CX/3F/9AlPmsLAocErq7A46eWOXSe29x48oN2rs9dncj
      PFcTJ/D65VOcvnRuaj0vCeApQQQjvbnRmPRCOELw/doqfzns0gEcBMsq5ZTWo68oQxztI/VI
      QdLAdrKXyzJRDD5uvOtls3eznFHHBYCrUqRWKGHHHQ6fpjB/yvUewZ0P6qyPNwF8s7bA3yVb
      c4/TS0b/hOMROUfBVSS7Dwl7t1kTguzaPT7+4jO2G+eJwlXwmqOu0D58dGWHq5/+HadPLfH4
      wUOW14/gvNwj7BlA6IHnQDKtXbccn9/zFrnfewIIGtKn5dVH8QFcBgpqKAQjn/jdROWeFAMq
      7rJ2brSNaZWEgD0Um0UEQuu82P5Zw93BRwjhcDK8PHlC6wnPb2bVyqX7IP7MaLZWrHWuUY+3
      RsOPhwp0zNHuVba4QC/8/9u7suY4ruv83dv79DKDAUgQ3EQapCSLEkVFkrVQjmO5UkrkcqWy
      PCfv+UnJc56SPGV5kpUqWxW5IlkqKbFM0+AGERtBzD7TM73cm4eZ2+ju6Z4ZAEMahPqrQhFA
      T2/EOfee5TvnLI8egQOShoF0GmubA3hbt/DW2wFw8XyhAEcFkSSQsgn+eNjAtd/vQ1YUyCNH
      8IJzGjZkeEEAjSr71Uij+b6dkWvZYQHq3iBqoS6UQGIuqmeH7VSSK3cS8WLBPCXghI7ULfEG
      h373ODRqgmQ8X/o57vZdSKDQKMFavzux+VUWhFlk97f3hT99LjiqnXvwZAe+nAr7Shq+DRgu
      hiFWUJhAcwE9XUFY7wAhiwY5CHi+D101IMNLFIKEfji0xUeO4OagDUcN0O4mC9hDLuPRvXtY
      ef55DGQNJf/wU+19SUmQ8w5q/kxyWk9p38v8fRohOG71O4eqWNufS8Bhu9sJ4U8rPQWDNdhB
      Xb40fh0A939/B/W9WsEFmgeIKoOeG0ZX0nQAQggG/T7IiKNCMrofPPZdPPJ6MOUkpYAQgi5s
      rD+oDyela9ZUkU0UgnMOGiOjdVRrbg7wNAhhZcRP3HPSbADx87S+oBIbQGLj/lD6LNXPVjQC
      glfKFby1UNCh5wNCQKo2qB+CbdUSh1RVhScrSK+2lA7LJ+uDHm53dsE5gykRXHYoFAqYmoxq
      xcG/fbkFc+UiKKUYUB2uaqLkjZPR4uB82GVBFwsmgJYsozM2hPtgynDQVZtzjqa8AanEMYmb
      lyXwmlGCN+gPO/PNoLTTnkxmHBQcHqVYVSmuuy6U3ceFAswLhBBguQKqKWAPHwMxijOVhi0W
      45+VJIo6c1HTPCyPMrR2ZQFXX3oZ/X4/mpUbUIL1Vgee24NWMvHYOoXz9T4oz09pUQyFP+4Y
      O8oicgeCP0FUBhcRdr8B0fNXfQGhYLKiYGV1FbWtLTQf744pXkhVMKqATmTbAp5swvCbCIgM
      nWuQOeCpdJQsHP6/FAowRxBCQComiGOAP26D1duA60FWFAxGdcIBOLoI0JA8uPAQX4VNpwzG
      GFRVRRAM6Q1v3XgVbwFYu3MH99fvYocBdPk0VjqPIOUoAU0EXgg0dRGEmkMBSNI/Z3ovFvio
      /++v0d36FrJuYOHaazBOn53JnMraNfKK2gUC38fmnbVEJ4kEbQIEbX0Zld567h7GQdDRlyNT
      qa3si/qax/CbkomzS4uFAswdhAwjQ8sV0OUKeMigD3xs3f4tmq0mQrL/R4+HPC2nDMO00Ol0
      Eo60YFhevXIFV69cgeu6+OZ3t7HWGGABA5xySmMrKhvV0EhEhaYuQZINdCkQHML855yj9tVn
      ePR/X4KPyH6NjQ2Q1VcRStOn4PQ6HXAqjQnqNHNq0Es6+/G8COccTX0Fmt+C4TfGrw2gZl6C
      JxmANE7+YwA2bAf83Lnvdme4pwnf93H/9i00anvR78QfVbdsLC6vRFwawbERX/HZVoKpSQhB
      vV7H9sN1tPZ2UDJLMEoGOJXgSSo0qYSLzIAEggEBfqdTNFOzy/x+H6SxHTXGau7V0Nrdfz4Q
      AIzB/fq/0a7Vwakarfp75mW09TMzEdCeFAhnKPe3YPW3IbEhlduXS2iULsJVKgA4CBlxkVJU
      dIN28MM/fbPYAZ4WFEXBlZdeRrfdQqtRh+/7UDUNhmnBTfF7BJuSUopyuQxJktBut6PdQPDZ
      q9UqKpUKOOd4+PAh7u08Qi3wYK2cgqJp2OHDhrcuBdgM5kpzawd//NobCeXjnOPLrTuwZAmP
      a014Iy4/I0PRmafwLxAGwgI8dIclkOJ9Od8fHytqDYBhXqNZOo/nzli421TgMhlEkXHeaeCC
      cwcVvQdNChByiq6vYqdj4159Ec2BDndA0Xi8V+wAf2iEYYi9vb2x4g1BR15YWIAkSQkToN1u
      w/f9aPh2PHMcBAHu3r+Ph/UmeooKGuu7n0bgeaDtPZy9dBEAR+3bDfzk7ZsJujClFLsP1nD7
      04/gewPUGm10pDK2yy+BT0jMHQZ/rrmwCMc/teTEO4n3FzufruvDZyMEjHNcsTpY75WwbDXw
      g3MPYGv5zjHjBHdri/hi6wJMnRUKcBzgeR5qtVoy1i1JUBQFlUolo9fOUBi63S48z8usfBKK
      0unmh0wj6vTovpquo1LebyNCCEGpVBoWo29voL61Dlkz8NWDPXy95QF0vgZEiTBIABrBeFt3
      sQOohoGllbNYMnWYBNh0PTT2aliiD/DexTWo0uS5ZwLtgYZP1s4UCnAcwBhDs9lEPxb1EJz6
      crmcOw3ddV202+3s4RdzgiRJUFUV/dgcLs45/vPjT3Fr1weh8lPzASqnTqN65gwIpXAIgw6O
      x5xCpiGek77CmfDzmTMbjDG4nlxkgo8DCCGwbTtRr8tGI5dc180vHczr+z9HMMYwGCRNCkII
      Pnz/Hbz5nAk1nJyUmxdKtoPqykpUGdbiBLucgoPD1vpoqs+jS7PnFmSCA6bqFwpwHCBqCOKV
      WIIyMGl1TxS4PyHkTZkhhODH772Fv/3pO9DZk1eCyunTKVOQgIOgpPigo9Byj46PVsoDoQQS
      5YUCHBcQQmAYxljJoEiIZUFV1THy3WEwbZRS3vEwDOE4Nl68sICj1BVMA5UkqHqWM89hyH6U
      j+tJpzM+kw0CQJJooQDHCZqmZa7q6TI+AULIkRVACPfUeWIT8O7rr0AN2kd6jkkghICwAAgG
      gN8HQh/gHAplILHEIjvIMG5RvP8EnrfAIUEIGXN4w3DYxCnPDBHzyOaBwyqBpmnQlRlFiQWJ
      PMP0h2JA7QFYrwHCAhAegoQeEPQhk2SDXo21Zn5mwgIoSuEEHyuIGHdaMDqdTiIKkz7HttMs
      z6cLSilevrwMsHx/RWM9XHZ8fPj6BfzgOQNXqxxV1CaeAwCk3wTcPXR2vk3SqDkD4X7C8jLZ
      ZvLc0RdYGCkPgFHvxRAS/Y6PSDqOUFUVi4uLaLfbUfRFhEk9z4Nt24lMsfAdXNeNOrsdBLMU
      ts+C11+9ht36r7D22AOXkrsYZwH+5MZzuH7t+1HvIJFl/pd//wj3WwEYlZDVpYcMWiAAWg9/
      D2PhNPTK0v5BxiEaPCqsBSvc2D8vdZ2yqaPruiCEwLIMGPoww17sAMcMhJAoAbawsJBoPdjr
      9dBsNqNW4fHscNbOMQuyClQOcx1VVfEXH/wIb19dhOI3EV+aidfB1dXLkS8jqA0A8Nc//Qle
      u6oipDt5Dzj8Jwzw6Defor15D2w0iCTkBAQh7GAdFwc/h4z9cC2PfYFQ9Nw+yraFleUlOLYV
      NQErEmFPAYlOaQcA5xyu66LVaiWE3XGG0yEFJYBzjmaziSAIJkaN8u6R6EBBSPR9buOqKfA8
      D7/++rf47PY2BkzGzReXcPPNG2PXiN/v40/+B58/6EYdMARo9xFoZzvxO0kzoJRsKKaFD66t
      QyftfFo059AlDscqoVQaZ84WJtBTwGGdVGHecM7Rag0dPM45fN+HaZoJ4RQDugU/KA9C4NOC
      Lo7NwyRSVRXvvnkDL67Wsb6xiRuvXBu7XnpBeOP69/HV3V8goEl/hhlVkH4DJNjPkocDF4Hn
      oUsr2GkquFQZdrvgoKnhexwK5ViqVqAo2dTtYgd4BsA5R7fbRbu9H2pUFCVBlBO2da/XQ6eT
      X3SeZfJMMoHEDjPPjHOemfUfH/0S3+xmOPosAOlsgww6ADigGGDWGUDWUS318LOrX8GgHgZM
      BgEH48OqONs04Dj2xIRhoQDPCDjnqNfrCVqCZVkwDCORQWaModVqwXXd3OtMEuZ4iDIupHm5
      iMMiSwncfh//8M8/hyfnRLX4qKkLobFqNI7ryxt47cw6KAtRtoYJszS1JBtFIuzYIm3GpAtj
      gGF4NM3ToZTCcRyUSsmherMinhSLO61pHNZZjt8nDUPXcXnZBsmroCcUoOmhIwRfb53BrZ0l
      qDJgGAYqlcpMwq+eer9QgOOKLAp0FtIKIM41TTOxMxwEceHPI9zNahIdVEk+fP9dXHTCmeqV
      bUnGC7qJJb+GtQcK7DM/nCkzTmQb2tm/hFx5ozCBjjNEXF9Qo+v1elQII6CqKqrVaqbCCIfY
      87yEXzCLTX/UFT5+HXHPWe/T6Xbxj//6XwgUZ+I1b9oLqBAAEsP5dy9jdXUVrP8QfuMLhN27
      QGKYOAHVTkO2r0EuXwehOkCKRNixBiEErVYLvu8P6Qa6HplGQgk8z0Ov1xsL8QmGqUiYdUeF
      MX+I+t1JdcPxyJOAbVn42c1ruPX5x9hhi6ghe8p8nzNwKqO65GB1dXX4zsYFUP08wEPwoA0e
      9gAigyoOQDWQVGuYwgQ6xpBlGZVKBZqmYTAYoNPpRMfiQtNqtaIwaRrCdxBZ4/jwijzMi1sE
      HE7hOOe4euksPqjcxgv8Vu5nvth7iF8++BKnrp8dU35CZVB1AZJxDpK+DCIZY8IPFApw7CFa
      r4tRoVlJK2BYHSaGQ6QR9wniCpGHo7JD4/edpWtElp/BJQ2NV/4en4Wvjl0PAHjoQQ674LSH
      5ZXZ6wDSKBTgGYCI+TuOEzm2omhegHOOWq2WGa4Utb3VahWmaY6NNsrDPJRg1mtkKV2pcgrg
      2eNXqazBky2cP3f+SDtWoQDPEDRNg+M4sCwroQwCYRhGhfJ5ocv40OmnpQQHQfxelmni5rWz
      4GHezkZByNFyFIUCPGOQZRmmaULTtLEKMmDoFHe7+X33JUmK+gmJSerTIj4ionSQ0KfIIB8F
      nHO89MIVKGEn+wNKCURWj3SfQgGeYWiahsXFxQTPxfM89Pt9eF72OCUhnLIso1QqRTvBrGbK
      NMwjOSaUjXMO27bx4z+6gmXVBeVBNHBbfHlEP1JtdKEAzzAIIZBlGdVqFZZlJY7lVZEJZHV7
      mAXTzI24LZ9Hq5iEdN6Ac44br7yEv/ubP8Nfvfs9XLI9BN06eL8JSfZwv1ZDq3X4cswiEXZC
      kOYKGYYxkQ/jeR4ajQaA5Io7yyo/C7U7LfRpXtGkxJh4n/R9hO+ys7MDRVHwq9ovsFnbwzvW
      O/jhe+8davcpFOCEQBTMiHyA2BnyFCAMQ/R6Pfi+H4VPha0/bZWftbYh/rl0t4tJ7VbStQjp
      YwId1kIQ+rhQvQQ9s2vEdBSZ4BOEuMAFQYB2u41yuZy5MkqSBNM0MRgMEARB1JVu3kmw+Io+
      yw6TrldIHxMghMCiDqhMczvnzYJCAU4Q0gzSfr8PwzByCWKU0qgLsyRJkfM8zSnOE9Csz6V9
      gXlEhoD9ZgAiuXdYFApwgpA2XTjn6HQ6oJTmV0SNBLNUKkFV1agYf5KdPqsCxD9/mDLNLOc5
      /jtFUY7cHa+IAp0gZCW3PM+buVuEJElRaFQQ6fIwj0L6SYhHgYRf8iSScoUCnCDoug7btjOj
      J7NARFlUVZ2qAFnnzlsR4gU58WScKP+cBwoFOCEQCS5N01CpVMbKJEVtwLQVVJZl2LYdFd3n
      KUF8NU4T9A7TASP9LumfxXXFsVmpHNNQKMAJgkiMiSIZIcS9Xg+9Xg/tdnumtinCOZ5WVzvp
      OrMS7ia9S/z7LNNuHigU4ARCmDK2bcNxHIRhiHa7Ddd1J/KE0tfQdR2O4xwo4pP2DY6KtDM8
      bz+gUIATDEKGfYUcx4lWctd1E5Nopp2vadrEOlthXuVFjdITLw+KtKlVOMEFDgShBKKHEDDs
      JpFHmc46v1wu54ZRBbKiNuvr61hfXwfnHJ988gkURcFgMEgM/XNdNxr0J3wU3/cTfkSaqjFP
      JSjyAN8BCN/ANE20Wq1I2KYJtYAkSahUKqjVarld5/Iyt77vo9FowLZtbGxsgBCCvb099Pt9
      SJIEy7LAGMPm5iZWVlawvb0NWZaxvLw8cec5qo8RXefIVyjwTCBeDKMoSlQLMOu5omFvXquV
      vJoBx3Gwu7sLy7LQ7XaHFAZr2JxWhDmDIIBhGLAsK6qDjptp8QHiQvCPGmmK3q0gw313wDmH
      53mRIhz2fNGId1rDLNd1o12HUgrLsrCxsREN9waG2VxZllGv1yOlcF0XKysr0W4TD3kKlmje
      CNmDolCAAgcC5xyDwQDNZjMzr5BZv5tarWctYRSfiyflRFTINM3Mbs8HRWECFTgQhDkky3Jm
      jiCvi1y6UGbaPdLnC2UQJtC8ZiPLh5kqUqCAWJGzGJ5pIT9obiCeWY6fG6dAiNLPo+L/AW8t
      DLxWi+LYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='63' name='Total Delay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA/CAYAAAC2GMfLAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAATcElEQVR4nO2dfVxUVd7Av/s8TJ+HXGc/Kxb6WLiS6Rqbb3c0ZAUCElMyVEhDWlBXw5eo
      VVOzVkxdo6hgDTV40AJXVmcFzRRfIIgXI4XRRQUVUBK0EA36OIovzO1znz9mUF6GmYEZlJb7
      /W/mnnvO7/zu+d17zu+c8zu/kiRJQkamm/JfD1oAGZkHiWwAMt0a2QBkujWyAch0a2QDkOnW
      yAYg062RDUCmWyMbgEy3RjYAmW6NbAAy3RrZAGSMkrtKhUoVTFLlg5akc7F70AL8J3F64yRC
      Pq8GwGnuP9kVNqhzC6xMIjggltKm/yl64jjEnWmz5hLk/jgPda4Ev3jkL4DNKCMvsxrse9JT
      AVW53/JAXp6669Sc3E/soilMCk+lQnwQQvxykA3AVlR+S24VOL0Sz0dTlVCax5Ga+1S2XzQa
      jQaNRsOR3Ax2RAbwpD3UfhvJ/JhjyDbQNrIB2IjK7HRK6YuP+yCGefqipIjsw7Wt0un71qvI
      BcTq/UQEejHmbl+7kqRgFargJCoB7cl4Fvq6301vCXYP/5aB41bwjx1LGaWAWvVm9jQTQ6Qu
      P44FgV6MUalQufsyOzKLakuspOEKGvV79+5VqXD3nU1kxkUaGtOUxTNVpUI1R01L+68/tIwx
      KhVz1PfrzWAe2QBsQi2aI6Wg9MD1KbAb6Ya7Agq/yqa1CRjQ5rJ2ZgT7L1xHZ+TyzxVJhIcl
      cLTuVocksus3nUUznYBC8o/W3yv20Nv4v76ZgsZyb9VxMnUZU8NTWzXYVhzZyLwPd927F7hV
      d5LUFaGsyzWUMWgy04cDRRlkN8uwnsOZeejwZOoLjh2qU2cgG4AtqM3mq0JQTvBGALATcHNX
      QGE+TdpeE26w72/LSWMM4XH7ydckE9q/6fUS4t6MpewxfyJ35nJEsxqPDog16OkRKIBLlw0t
      USxg0wdZ3FK4MCtuP/kaDUfSE5jlokBXuJGtx8xk+JshBC+LY0dGLkc0GjRHctm5yhsHtKTt
      yUFfVUeemzAKKOLLg01GQeIx8vN04OmDZ48OVKaTkA3ABtQfzacQJb6ewwz/9GDss25ADpk5
      xiwgh6wTvkTvjCVU9WhrT01pFnk9w0nevpJxAx7uuKuunxPOwPnKS/rfBYfYowWnme+w0FCu
      Xa8RhC15mb5oyT1y2nR+w15m0TQVA39rkMnuYQZMmsf0J4DLV/nRkMzh+cl4K6B0z0HKDP+J
      +Zmk6xR4+3rShdq/bADWU09OZg4o3HEbea+p9vD0wRPIP2psEDqYBZ+uxEPZRpbK8ayLDcXZ
      Wif191VUAE/0f0z/87tz6FAyRtXcPWs3dAQjgeorP7bOoxkNXMyIYcHLvrgbxgAq1TQ2nW+R
      rIcPgf5KqDrE12UAIsfz89Ap3PEZ25WavzwPYD31h8nOB3RpLHZNa309PZP8lR54NNP0QAaa
      at19B/FEW8bRDspO/Rsd8FgffZ9bFEVAizpMhbrduYmc3vgyIdt6EhS1ifefGYjyIdAP3AOI
      bZbWjtHjJqBMUaPec4ywRT+Tla5F4e5DF2v/sgFYi3gsnzxjo9hGdHnkHxfxGH2fVa3dT3xi
      FSi88TV0uvs/+XsUVOC+7iuixre3JZ4gLbUKfKNZ4j7QfHLBn+lOahIOZFDg+d+kaxX4vuDT
      pbo/IHeBrEQkPzMdHU7M/afmri/+rk9+UyBKtKTnnLh/IjVoOZcXT/hLEeTowOmVmfg0trph
      o3FX6Mj62+vEa6q5aeibiTerKf4qnjc/PWoi43puaIEjmWTViUAD2nN5JEW8xeZSY+kHMXn6
      cNCmExl5AK3CFx+3rve+7XoS/ZIQj+s9G07j8TKy6sFu9DgmKFNQ5x7h9FKBpzpLjrTFqIz0
      vhy817Ax7Kl7D7mHD/Pm/ZO82BMkzJtEQssb/KJNFCLg5q0gLSuNZb5NCrPvQx8lGHPWOj43
      gVEfRlJ4EZSBfnTB9i9/AaxBPJ5FuhacxnthfNWPgPcEJVQf5GszDhaboeiJ49CJhMfsZm/U
      RPo2a3R2OIduYVdUMKN/1xOF4V/7XgMZHbyKbW+4mci4B+P/Gk/4s49hr7+JoQGr2J62kZf6
      tnGLw/NM9lYASny9R3bJt+2v5MBYMp1HPYeWPcc7Gn82pb/F/R4GWYL8BZDpJBq4khFFdJYO
      h0kTumTjB3kMINMJVCYFExBrGBkrPFnz52Gmb3iAyF0gmW6N3AWS6dbIBiDTrZENQKZbIxuA
      TLdGNgCZbo1sADLdGtkAZLo1sgHIdGtkA5Dp1li/FKLhCsW5B8g4mMPXZ77jao0hYoCiJ479
      h/DHCUEEvTSGAQ+bLqrhiobdmz9j9zdnqGzMw74X//vkUCZOmcO0Cb+nl00WbojUnT1A0ifJ
      HDh1Dn3QBQU9Hfsz5I8TCAp6iTEW7cNt4IpmNxs+3sD+cm+i27FxXaw7y4F/bWb3/pOU/1Cn
      X0ps0Ndzwa8TarO6Ni30GB/6haE2hKnwi9aw2hKBGy6Stz2Bz/+Vx5lWz2UmU8f/gUebbWrO
      ZZVqMUZWZ5vEYnmMYI0+rVoKUbrjVZasP85lUzuiABQDmL5+C0tHG9vnp+Vk/CIWJpwwuqb8
      bhZ9xvLmJx8RYM1G2YYy1MsW8/fDl42GItEzmPDUllEammXCxbzPWf/xNrIvNUrsZ5kBNFwk
      4+NlrEktN13XAdNZv2UpRtXVIUROb5xGyOdVd/8x3+BE6vJjWbg8mXJTwvpFo2mW0X00AFvo
      U7KCnAhBEoSxkv/8aEl9+JR08eo16U7jRV29VFeeKyW+FSi5CoIkuIZIied1rfK4nDLPcN1P
      eiMuVypvmseda9LFU19K7708VhIEQRJ810jf3OigsLrzUmKIqyQIguTq94YUl1su1dU3ynNH
      unbxlJSRuE6a7z9bSrxg7P56qSI9Wprrp89DcH1WeuW9dGnrckEShAgpx1z5P2ZIK+/e6yfN
      jVZLheV10j0RrkkXC3dIKw11dZ2XIl3uYFVbiV6yQZoiCJJryDbpQk6EJAiCFGFG4Gs5EZKv
      oH++L7/3pXTq4r3noquvk8oL1dKnS16Rnl1jtuYmKJXipgiS4BUpHW3dNExjI31aZQBnc76U
      ztSak1wnnU8MkVwFQfKK0rS4ppGivNo2jntck3IifCVBEKR5KT92QFKddH7LDEkQBMn3tRTJ
      ZFGSTtIZu25oOI0Nv8Kgaf1LwAIDuJAozRBcpcA16VLVHRPp7hrqC9KGEnOZWoDuvLRlhl7H
      2y7cq4dJA7iWKb3tJUiCa6AUdfSa6eyNKssybhxcKrkKgvTnHR0wdZvo84Zk1SB4sMckfm+2
      s2qHc3Ao3oC2qLh5wNjvz1KsBbxDCTbZtVHiETqdJ4DCkyXtF7Q+k7iEUnDwZ9X7AWbCjdhh
      Z+y63a8ZErCKbWkZ/GPFOLNjmtb392PqJ2lsXzmOx02FbLZzJjjUG6im+EybceUsRKRi60o2
      lSpweW0NwW1265pTtn0Dh7QKXF77qI1uaxNxjSrLEipJ2ZqFTulHSEcixdlCnzX77vN+gD6P
      0Lvpb8e+PAaU3L7NHSwbkfd9tLf5RC2o2beTLB0Mn/0qbh0NS+C2lH+Y2jFojn7PEdDPsqSN
      jeph+/+xokAQK7ayclMpilEriLK09YsF7FJXgTKQhdMtvKcD1Od+RlIpDA6fjUdHnokN9Fl7
      OPv+uEFr9uwkCwWj3ITmYTHsnsHP3wFy1hOVq207A7GavRu3cZ7BBL7Q3q3ltRzOLoIuFpOy
      bUROnzoFODFooBVBRMQKklcnUKoYxZvvBmBxzU/kkK6FvgEvduIurkpS4tPQKrwJCew8I9PT
      tj5LTxd1sgGINzmjDickshBc5rHUv+Vj6IHb8lgWuGhJW+xHUOReii9p70YaFm/+xLm8JCL+
      NI3VOQq813xk8Wf8HqWcLgJcRjKsqwWlMYL2ZDwfbKtC4TmHICvO16hUryauBDxXfkBAO+z+
      +7PFaFEwekSnxbBALNhOUik4zZxDu8MTtZO29fk9353T2b4L1KD9Ee2VC2R9tYO96m84cx36
      +K5h15qWEQoMPDSI2VvSGJH8Hqs3r2ZmassECnoOeZHI3UsYZ7Kz1wa11fygA373OP1o4Epx
      Lge+3MWBJvMNip6ODBEmEbQwBC9rYnFaRQNl6mUs/vthLiv9iF41kQ57QSuTidhQAp5rWDWx
      fblc/uEi4IxTPxBvfkfRvkPsOLifk+U/GOZM7Ok18GmenTKbOVNULeYALKGG1P9LQavwZvkr
      nXmCjjl9ioiirfYE565CtbiF59e+F0O95hEzy4KJJbtf09v5SQY6HqOmZbhwe0eGjPwDj/fo
      4Mfqxg20gPJ0ApPdF3PJiMNYd72Gk9mbOZmdxIDp69mydHTHG18HEOv+zZalr5Nw4hb2w+by
      WUwYQzve+kmO2ECJ/XiiOmBE9Te0wG84+Fcv4s4YC91+i7pzBez6sIBdn41hxacx7ZqbEQs+
      J74InGY1CdhlY9qlz/b7n8xw55p09Wq5VPhlorRuvr80VhAkQfCVXks8IbV2qDW6N32liBwT
      7rY7pdKWEFcL3KVGuJAozRAE6fmPj0vm7rzr+26HX9piN2hL7pRKO97w08+B+L4mJR6vNSuf
      WS6nSPNcBck3IseIrg2YcYPq6zNf2lVrpqwm8yqWujF1mijJVxAk3yiN9XVtSbv1eUFKnCFY
      5wY1ykNKevceiGpSKG9v+oKv0xMIHwPfxoYRnlTRLFKyWLCJd9NqcZoVw8o2QyWj7ybFrsST
      EuJi0to+dMIYvR+hD3D12nWznzulx0rWBipBm05nRjMUK1IJnzSDDw/X4uC7it17Ywkd0cvK
      z7GW/VEfUaj0450lHh3+gvV+tC9wDe11MwntnAmN+gvDgaLswxY8kxr2bN5FrWIUr4YINu1m
      dkyfend3p3d37XqNIDTmU34OncamuDgyA6PuDnyqiv+Nlr4EeD1lXhDlM7gNh5xvj1OCv+UH
      RvT4Hc59IefsOSrwwNm0tIwcPQZSDnHD6MEW1iNWJBMWGsMJcQDTP4lnkZu1Dd9A/nrW5uiA
      NBZ7m1+IkLZYdW+5QpPlDP0HDAJyKDsvQn8zkjmOwu0JKNLe4AbgYCKpeDqF5EIdysBZtPKF
      WEHH9dmPAQMV92k1qJ0zz/o8AbrvudwkBP3l76vavqdNbnKrXacGDeLpkQo4v4+MMvOp79y+
      3QGZLKQ+n8j5MZwQXViQlMxSWzV+AFE0sb7Jcnq4DGUwkHUwE/PvgNvcumlJrlrSt2yjiuGE
      zRptuzpbqc9hgtv9c3j8VHsVeISff773X3/nQUAJ+YWVLHzKjH+zXsPRIkD5KL3t21OyHW5+
      /ijTUlAnZRG0zttE96Cew9n5wGCcbe6eFjm2aTV7ah3wi45l9iAbn+DrsRqNZrX5dAaHRZuL
      z/o/z4vDY/kwayvqCh9mmxrgluWRWQ2KkQMwOSdVtp3NOTqUga+2yyVrGuv12eMZNyu+ACf2
      EJ/X5HRAE4gVSXyySwvKEfzB6d7//Z6byHCgNC6Cz8pM5CTWkRUVTZYOHCZ40944Y3ajgwgd
      DNpDH/BOakWbx4Zqc/Wh/Bj+Is/b2gDqM1HvqoXhs1lgarzzwHHkhRA/lJSSsDyGgrbmJ8UK
      ktYlUoUSfz9Tb9J6Dm1OpIrBhAbZ8u1vA306PG+FAVw7TsKiKXh6/Yk34/7FN8WX+FHbpBGL
      N/npUjF7Y15lcnAsJToFLn8Oaj676BjA2+EuKHQlbAqdyqsxbU2E+bMsrRYc/HgnzMgAqkbN
      HJUK1d3jRlvSn+C14bgoavk2MpjJf4kn71xjOSI3fzpHXvxfmLE8jVocmD6/HTOnlnKigDwd
      uHiNtSpvseB9vFWqdh2d2l56eCzhXT8HdN+pWeAXROTeYqobDxNo0HKpeC+RfwoltkSHYtRC
      ZpmaMi7bRnyWDqVfGO2d9K1Rz9Efw2Q4NrYZNtFnDysMsr8bE5/MYn/5GbI3nyF7s6nEDoxZ
      GsvHrdaW2OEcGkv8bf1+gOPJq5mZbDwHxQB/1n2ywui5WmVfqCkCGOyDexvfYjvnUGLjb7No
      YQInDiew6HCr6Pig6IN/1FYWCS3VYm6NexqLjQTob9rNqCw/iw4oifFHFdNmRs0YHJ5KcrON
      CfVkpuzRz2uM92S4Zdl0ACUeKxNZo5vL2vRyUlfPJNVI78p+WDhb1pt6WTS+/Z2YG+zRztNh
      yvhCXQTAYB/3Vl0s2+jTGi9Q//Gs2e7DW9VnyU/P4GDO15z57io11w1DMUVPHB8ZwJCJU5gz
      bYKJVaNKhoZtIXNKMYeSN5H8VcsdYa4EzJrFS2MGYHQBZuPiLYUL4WtDTK70VA4NY0vmxFY7
      nOx7DeTpCcG8HmpKzi5AzT52ZunAwY93l5say9gAu75MfO8LXENa7J5T9MRxiDvTZs0lyP3x
      1idcNkGsULM1S4fCO4z2TvqKBbvQP9Zw1oY4d95g1dbzEfcb/ZpyVykk8bztJ1e6GKVxU8xP
      Gv5HcEM6uLSDE5/tpAu/7iyhhn07s2DUCqJCO/Et0RUwfOkcpsebnjT8T6BmH/rHGkWo1WfF
      muYX3WbE0ymoK8az7otOGLR2MbTpavb0XUDyItvOonY9RE6nqKkYv44vbOczbRP5fACZbo0c
      F0imWyMbgEy35v8BW955m9qKKxkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='US Flight Delay' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
